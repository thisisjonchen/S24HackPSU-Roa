{"ast":null,"code":"var _jsxFileName = \"/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebcamRecorder({\n  videoRef\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [stream, setStream] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      const constraints = {\n        video: {\n          width: 720,\n          height: 1280\n        }\n      };\n      const newStream = await navigator.mediaDevices.getUserMedia(constraints);\n      setStream(newStream);\n      const mediaRecorder = new MediaRecorder(newStream);\n      mediaRecorder.start();\n      setIsRecording(true);\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        recordedChunks.current.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(recordedChunks.current, {\n          type: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n        });\n        const url = URL.createObjectURL(blob);\n        console.log('Recorded video URL:', url);\n        recordedChunks.current = [];\n      };\n      videoRef.current.srcObject = newStream;\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n    }\n  };\n  function stopRecording() {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"recording\",\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button stop\",\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button start\",\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(WebcamRecorder, \"h6WeLsOv48JFdv9tgINEXf6tFlw=\");\n_c = WebcamRecorder;\n;\nexport default WebcamRecorder;\nvar _c;\n$RefreshReg$(_c, \"WebcamRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","WebcamRecorder","videoRef","_s","isRecording","setIsRecording","stream","setStream","mediaRecorderRef","recordedChunks","startRecording","constraints","video","width","height","newStream","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","start","current","ondataavailable","event","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","console","log","srcObject","error","stopRecording","state","stop","getTracks","forEach","track","children","className","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction WebcamRecorder({videoRef}) {\n    const [isRecording, setIsRecording] = useState(false);\n    const [stream, setStream] = useState(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunks = useRef([]);\n\n    const startRecording = async () => {\n        try {\n            const constraints = { video: { width: 720, height: 1280 } };\n            const newStream = await navigator.mediaDevices.getUserMedia(constraints);\n            setStream(newStream);\n            const mediaRecorder = new MediaRecorder(newStream);\n\n            mediaRecorder.start();\n            setIsRecording(true);\n\n            mediaRecorderRef.current = mediaRecorder;\n            mediaRecorder.ondataavailable = (event) => {\n                recordedChunks.current.push(event.data);\n            };\n\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(recordedChunks.current, { type: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"' });\n                const url = URL.createObjectURL(blob);\n                console.log('Recorded video URL:', url);\n                recordedChunks.current = [];\n            };\n\n            videoRef.current.srcObject = newStream;\n        } catch (error) {\n            console.error('Error accessing webcam:', error);\n        }\n    };\n\n    function stopRecording() {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n        }\n        if (stream) {\n            stream.getTracks().forEach((track) => track.stop());\n        }\n        setIsRecording(false);\n    };\n\n    return (\n        <div>\n            <video className=\"recording\" ref={videoRef} autoPlay></video>\n            <div>\n                {isRecording ? (\n                    <button className=\"button stop\" onClick={stopRecording}>Stop Recording</button>\n                ) : (\n                    <button className=\"button start\" onClick={startRecording}>Start Recording</button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WebcamRecorder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,cAAcA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMW,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMW,cAAc,GAAGX,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,WAAW,GAAG;QAAEC,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAK;MAAE,CAAC;MAC3D,MAAMC,SAAS,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACP,WAAW,CAAC;MACxEJ,SAAS,CAACQ,SAAS,CAAC;MACpB,MAAMI,aAAa,GAAG,IAAIC,aAAa,CAACL,SAAS,CAAC;MAElDI,aAAa,CAACE,KAAK,CAAC,CAAC;MACrBhB,cAAc,CAAC,IAAI,CAAC;MAEpBG,gBAAgB,CAACc,OAAO,GAAGH,aAAa;MACxCA,aAAa,CAACI,eAAe,GAAIC,KAAK,IAAK;QACvCf,cAAc,CAACa,OAAO,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MAC3C,CAAC;MAEDP,aAAa,CAACQ,MAAM,GAAG,MAAM;QACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACpB,cAAc,CAACa,OAAO,EAAE;UAAEQ,IAAI,EAAE;QAA6C,CAAC,CAAC;QACrG,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACrCM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,GAAG,CAAC;QACvCtB,cAAc,CAACa,OAAO,GAAG,EAAE;MAC/B,CAAC;MAEDpB,QAAQ,CAACoB,OAAO,CAACc,SAAS,GAAGrB,SAAS;IAC1C,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,SAASC,aAAaA,CAAA,EAAG;IACrB,IAAI9B,gBAAgB,CAACc,OAAO,IAAId,gBAAgB,CAACc,OAAO,CAACiB,KAAK,KAAK,UAAU,EAAE;MAC3E/B,gBAAgB,CAACc,OAAO,CAACkB,IAAI,CAAC,CAAC;IACnC;IACA,IAAIlC,MAAM,EAAE;MACRA,MAAM,CAACmC,SAAS,CAAC,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;IACvD;IACAnC,cAAc,CAAC,KAAK,CAAC;EACzB;EAAC;EAED,oBACIL,OAAA;IAAA4C,QAAA,gBACI5C,OAAA;MAAO6C,SAAS,EAAC,WAAW;MAACC,GAAG,EAAE5C,QAAS;MAAC6C,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DnD,OAAA;MAAA4C,QAAA,EACKxC,WAAW,gBACRJ,OAAA;QAAQ6C,SAAS,EAAC,aAAa;QAACO,OAAO,EAAEd,aAAc;QAAAM,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAE/EnD,OAAA;QAAQ6C,SAAS,EAAC,cAAc;QAACO,OAAO,EAAE1C,cAAe;QAAAkC,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACpF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChD,EAAA,CAxDQF,cAAc;AAAAoD,EAAA,GAAdpD,cAAc;AAwDtB;AAED,eAAeA,cAAc;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}