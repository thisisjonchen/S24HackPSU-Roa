{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function transposeImpl(xVals, xShape, dtype, perm, newShape) {\n  const xRank = xShape.length;\n  const xSize = util.sizeFromShape(xShape);\n  const xStrides = util.computeStrides(xShape);\n  const newStrides = util.computeStrides(newShape);\n  const result = util.getTypedArrayFromDType(dtype, util.sizeFromShape(newShape));\n  for (let i = 0; i < xSize; ++i) {\n    const loc = util.indexToLoc(i, xRank, xStrides);\n    // Permute location.\n    const newLoc = new Array(loc.length);\n    for (let i = 0; i < newLoc.length; i++) {\n      newLoc[i] = loc[perm[i]];\n    }\n    const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n  return result;\n}","map":{"version":3,"names":["util","transposeImpl","xVals","xShape","dtype","perm","newShape","xRank","length","xSize","sizeFromShape","xStrides","computeStrides","newStrides","result","getTypedArrayFromDType","i","loc","indexToLoc","newLoc","Array","newIndex","locToIndex"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Transpose_impl.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NumericDataType, TypedArray} from '@tensorflow/tfjs-core';\nimport {util} from '@tensorflow/tfjs-core';\n\nexport function transposeImpl(\n    xVals: TypedArray, xShape: number[], dtype: DataType, perm: number[],\n    newShape: number[]): TypedArray {\n  const xRank = xShape.length;\n  const xSize = util.sizeFromShape(xShape);\n  const xStrides = util.computeStrides(xShape);\n  const newStrides = util.computeStrides(newShape);\n\n  const result = util.getTypedArrayFromDType(\n      dtype as NumericDataType, util.sizeFromShape(newShape));\n\n  for (let i = 0; i < xSize; ++i) {\n    const loc = util.indexToLoc(i, xRank, xStrides);\n\n    // Permute location.\n    const newLoc: number[] = new Array(loc.length);\n    for (let i = 0; i < newLoc.length; i++) {\n      newLoc[i] = loc[perm[i]];\n    }\n\n    const newIndex = util.locToIndex(newLoc, xRank, newStrides);\n    result[newIndex] = xVals[i];\n  }\n  return result;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,IAAI,QAAO,uBAAuB;AAE1C,OAAM,SAAUC,aAAaA,CACzBC,KAAiB,EAAEC,MAAgB,EAAEC,KAAe,EAAEC,IAAc,EACpEC,QAAkB;EACpB,MAAMC,KAAK,GAAGJ,MAAM,CAACK,MAAM;EAC3B,MAAMC,KAAK,GAAGT,IAAI,CAACU,aAAa,CAACP,MAAM,CAAC;EACxC,MAAMQ,QAAQ,GAAGX,IAAI,CAACY,cAAc,CAACT,MAAM,CAAC;EAC5C,MAAMU,UAAU,GAAGb,IAAI,CAACY,cAAc,CAACN,QAAQ,CAAC;EAEhD,MAAMQ,MAAM,GAAGd,IAAI,CAACe,sBAAsB,CACtCX,KAAwB,EAAEJ,IAAI,CAACU,aAAa,CAACJ,QAAQ,CAAC,CAAC;EAE3D,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAE,EAAEO,CAAC,EAAE;IAC9B,MAAMC,GAAG,GAAGjB,IAAI,CAACkB,UAAU,CAACF,CAAC,EAAET,KAAK,EAAEI,QAAQ,CAAC;IAE/C;IACA,MAAMQ,MAAM,GAAa,IAAIC,KAAK,CAACH,GAAG,CAACT,MAAM,CAAC;IAC9C,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,CAACX,MAAM,EAAEQ,CAAC,EAAE,EAAE;MACtCG,MAAM,CAACH,CAAC,CAAC,GAAGC,GAAG,CAACZ,IAAI,CAACW,CAAC,CAAC,CAAC;;IAG1B,MAAMK,QAAQ,GAAGrB,IAAI,CAACsB,UAAU,CAACH,MAAM,EAAEZ,KAAK,EAAEM,UAAU,CAAC;IAC3DC,MAAM,CAACO,QAAQ,CAAC,GAAGnB,KAAK,CAACc,CAAC,CAAC;;EAE7B,OAAOF,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}