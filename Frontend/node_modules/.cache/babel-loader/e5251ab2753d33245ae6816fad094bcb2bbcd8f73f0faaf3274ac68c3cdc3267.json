{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reverse } from '../kernel_names';\nimport { reverse } from '../ops/reverse';\nimport { parseAxisParam } from '../util';\nexport const reverseGradConfig = {\n  kernelName: Reverse,\n  gradFunc: (dy, saved, attrs) => {\n    const {\n      dims\n    } = attrs;\n    const axes = parseAxisParam(dims, dy.shape);\n    return {\n      x: () => reverse(dy, axes)\n    };\n  }\n};","map":{"version":3,"names":["Reverse","reverse","parseAxisParam","reverseGradConfig","kernelName","gradFunc","dy","saved","attrs","dims","axes","shape","x"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Reverse_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Reverse, ReverseAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {reverse} from '../ops/reverse';\nimport {Tensor} from '../tensor';\nimport {parseAxisParam} from '../util';\n\nexport const reverseGradConfig: GradConfig = {\n  kernelName: Reverse,\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const {dims} = attrs as unknown as ReverseAttrs;\n    const axes = parseAxisParam(dims, dy.shape);\n    return {x: () => reverse(dy, axes)};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,OAAO,QAAqB,iBAAiB;AAErD,SAAQC,OAAO,QAAO,gBAAgB;AAEtC,SAAQC,cAAc,QAAO,SAAS;AAEtC,OAAO,MAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEJ,OAAO;EACnBK,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC7D,MAAM;MAACC;IAAI,CAAC,GAAGD,KAAgC;IAC/C,MAAME,IAAI,GAAGR,cAAc,CAACO,IAAI,EAAEH,EAAE,CAACK,KAAK,CAAC;IAC3C,OAAO;MAACC,CAAC,EAAEA,CAAA,KAAMX,OAAO,CAACK,EAAE,EAAEI,IAAI;IAAC,CAAC;EACrC;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}