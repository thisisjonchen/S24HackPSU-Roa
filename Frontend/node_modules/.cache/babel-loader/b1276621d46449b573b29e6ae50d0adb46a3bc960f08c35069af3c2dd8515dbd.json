{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SplitV } from '../kernel_names';\nimport { concat } from '../ops/concat';\nexport const splitVGradConfig = {\n  kernelName: SplitV,\n  gradFunc: (dy, saved, attrs) => {\n    const {\n      axis\n    } = attrs;\n    return {\n      x: () => concat(dy, axis)\n    };\n  }\n};","map":{"version":3,"names":["SplitV","concat","splitVGradConfig","kernelName","gradFunc","dy","saved","attrs","axis","x"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/SplitV_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {SplitV, SplitVAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {concat} from '../ops/concat';\nimport {Tensor} from '../tensor';\n\nexport const splitVGradConfig: GradConfig = {\n  kernelName: SplitV,\n  gradFunc: (dy: Tensor[], saved: Tensor[], attrs: NamedAttrMap) => {\n    const {axis} = attrs as unknown as SplitVAttrs;\n\n    return {x: () => concat(dy, axis)};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,MAAM,QAAoB,iBAAiB;AAEnD,SAAQC,MAAM,QAAO,eAAe;AAGpC,OAAO,MAAMC,gBAAgB,GAAe;EAC1CC,UAAU,EAAEH,MAAM;EAClBI,QAAQ,EAAEA,CAACC,EAAY,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC/D,MAAM;MAACC;IAAI,CAAC,GAAGD,KAA+B;IAE9C,OAAO;MAACE,CAAC,EAAEA,CAAA,KAAMR,MAAM,CAACI,EAAE,EAAEG,IAAI;IAAC,CAAC;EACpC;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}