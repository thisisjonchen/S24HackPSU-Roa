{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Min } from '../kernel_names';\nimport * as util from '../util';\nimport { gradForMinAndMax } from './min_max_grad_util';\nexport const minGradConfig = {\n  kernelName: Min,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy, saved, attrs) => {\n    const minAttrs = attrs;\n    const {\n      axis\n    } = minAttrs;\n    const [x, y] = saved;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    const minGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: () => {\n        return minGrad['x']();\n      }\n    };\n  }\n};","map":{"version":3,"names":["Min","util","gradForMinAndMax","minGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","minAttrs","axis","x","y","origAxes","parseAxisParam","shape","minGrad"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Min_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Min, MinAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\nimport {gradForMinAndMax} from './min_max_grad_util';\n\nexport const minGradConfig: GradConfig = {\n  kernelName: Min,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const minAttrs: MinAttrs = attrs as unknown as MinAttrs;\n    const {axis} = minAttrs;\n    const [x, y] = saved;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    const minGrad = gradForMinAndMax(dy, y, x, origAxes);\n    return {\n      x: () => {\n        return minGrad['x']();\n      }\n    };\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,QAAiB,iBAAiB;AAG7C,OAAO,KAAKC,IAAI,MAAM,SAAS;AAE/B,SAAQC,gBAAgB,QAAO,qBAAqB;AAEpD,OAAO,MAAMC,aAAa,GAAe;EACvCC,UAAU,EAAEJ,GAAG;EACfK,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC7D,MAAMC,QAAQ,GAAaD,KAA4B;IACvD,MAAM;MAACE;IAAI,CAAC,GAAGD,QAAQ;IACvB,MAAM,CAACE,CAAC,EAAEC,CAAC,CAAC,GAAGL,KAAK;IACpB,MAAMM,QAAQ,GAAGd,IAAI,CAACe,cAAc,CAACJ,IAAI,EAAEC,CAAC,CAACI,KAAK,CAAC;IACnD,MAAMC,OAAO,GAAGhB,gBAAgB,CAACM,EAAE,EAAEM,CAAC,EAAED,CAAC,EAAEE,QAAQ,CAAC;IACpD,OAAO;MACLF,CAAC,EAAEA,CAAA,KAAK;QACN,OAAOK,OAAO,CAAC,GAAG,CAAC,EAAE;MACvB;KACD;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}