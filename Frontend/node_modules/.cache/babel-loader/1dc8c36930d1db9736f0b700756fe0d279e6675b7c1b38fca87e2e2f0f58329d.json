{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PackProgram {\n  constructor(outputShape) {\n    this.variableNames = ['A'];\n    this.packedInputs = false;\n    this.packedOutput = true;\n    // Only input / output 3D tensors.\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n    if (this.rank === 0) {\n      this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n    } else {\n      const channels = getChannels('rc', this.rank);\n      const dtype = getCoordsDataType(this.rank);\n      const outOfBoundsCondition = this.getOutOfBoundsCondition(channels);\n      const setup = this.getSetup(channels);\n      const output = this.getOutput(channels);\n      this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n    }\n  }\n  getSourceCoordsArr(dims) {\n    const coords = [];\n    for (let row = 0; row <= 1; row++) {\n      for (let col = 0; col <= 1; col++) {\n        let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n        for (let d = 2; d < this.rank; d++) {\n          coord = `${dims[dims.length - 1 - d]},` + coord;\n        }\n        coords.push(coord);\n      }\n    }\n    return coords;\n  }\n  getOutOfBoundsCondition(dims) {\n    if (this.rank === 1) {\n      return `rc > ${this.enableShapeUniforms ? 'outShape' : this.outputShape[0]}`;\n    }\n    let cond = '';\n    for (let i = this.rank - 2; i < this.rank; i++) {\n      cond += `${dims[i]} >= ${this.enableShapeUniforms ? `outShape[${i}]` : this.outputShape[i]}`;\n      if (i < this.rank - 1) {\n        cond += '||';\n      }\n    }\n    return cond;\n  }\n  getSetup(dims) {\n    if (this.rank === 1) {\n      return '';\n    }\n    const innerDims = dims.slice(-2);\n    const col = this.enableShapeUniforms ? `outShape[${this.rank} - 1]` : this.outputShape[this.rank - 1];\n    const row = this.enableShapeUniforms ? `outShape[${this.rank} - 2]` : this.outputShape[this.rank - 2];\n    return `\n      int r = ${innerDims[0]};\n      int c = ${innerDims[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${row};\n    `;\n  }\n  getOutput(dims) {\n    const sourceCoords = this.getSourceCoordsArr(dims);\n    if (this.rank === 1) {\n      const outShape = this.enableShapeUniforms ? 'outShape' : this.outputShape[0];\n      return `getA(rc), (rc + 1 >= ${outShape} ? 0. : getA(rc + 1)), 0, 0`;\n    }\n    return `getA(${sourceCoords[0]}),\n            cEdge ? 0. : getA(${sourceCoords[1]}),\n            rEdge ? 0. : getA(${sourceCoords[2]}),\n            rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n  }\n}","map":{"version":3,"names":["useShapeUniforms","getChannels","getCoordsDataType","PackProgram","constructor","outputShape","variableNames","packedInputs","packedOutput","rank","length","enableShapeUniforms","userCode","channels","dtype","outOfBoundsCondition","getOutOfBoundsCondition","setup","getSetup","output","getOutput","getSourceCoordsArr","dims","coords","row","col","coord","d","push","cond","i","innerDims","slice","sourceCoords","outShape"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-webgl/src/pack_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram, useShapeUniforms} from './gpgpu_math';\nimport {getChannels} from './packing_util';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class PackProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  packedInputs = false;\n  packedOutput = true;\n  enableShapeUniforms: boolean;\n  rank: number;\n\n  constructor(\n      outputShape:\n          number[]) {  // TODO(https://github.com/tensorflow/tfjs/issues/893):\n                       // Only input / output 3D tensors.\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n\n    if (this.rank === 0) {\n      this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n    } else {\n      const channels = getChannels('rc', this.rank);\n      const dtype = getCoordsDataType(this.rank);\n      const outOfBoundsCondition = this.getOutOfBoundsCondition(channels);\n      const setup = this.getSetup(channels);\n      const output = this.getOutput(channels);\n\n      this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n    }\n  }\n\n  private getSourceCoordsArr(dims: string[]): string[] {\n    const coords = [];\n\n    for (let row = 0; row <= 1; row++) {\n      for (let col = 0; col <= 1; col++) {\n        let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n\n        for (let d = 2; d < this.rank; d++) {\n          coord = `${dims[dims.length - 1 - d]},` + coord;\n        }\n\n        coords.push(coord);\n      }\n    }\n    return coords;\n  }\n\n  private getOutOfBoundsCondition(dims: string[]): string {\n    if (this.rank === 1) {\n      return `rc > ${\n          this.enableShapeUniforms ? 'outShape' : this.outputShape[0]}`;\n    }\n\n    let cond = '';\n    for (let i = this.rank - 2; i < this.rank; i++) {\n      cond += `${dims[i]} >= ${\n          this.enableShapeUniforms ? `outShape[${i}]` : this.outputShape[i]}`;\n      if (i < this.rank - 1) {\n        cond += '||';\n      }\n    }\n\n    return cond;\n  }\n\n  private getSetup(dims: string[]): string {\n    if (this.rank === 1) {\n      return '';\n    }\n\n    const innerDims = dims.slice(-2);\n    const col = this.enableShapeUniforms ? `outShape[${this.rank} - 1]` :\n                                           this.outputShape[this.rank - 1];\n    const row = this.enableShapeUniforms ? `outShape[${this.rank} - 2]` :\n                                           this.outputShape[this.rank - 2];\n\n    return `\n      int r = ${innerDims[0]};\n      int c = ${innerDims[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${row};\n    `;\n  }\n\n  private getOutput(dims: string[]): string {\n    const sourceCoords = this.getSourceCoordsArr(dims);\n    if (this.rank === 1) {\n      const outShape =\n          this.enableShapeUniforms ? 'outShape' : this.outputShape[0];\n      return `getA(rc), (rc + 1 >= ${outShape} ? 0. : getA(rc + 1)), 0, 0`;\n    }\n\n    return `getA(${sourceCoords[0]}),\n            cEdge ? 0. : getA(${sourceCoords[1]}),\n            rEdge ? 0. : getA(${sourceCoords[2]}),\n            rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}