{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sub } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const subImpl = createSimpleBinaryKernelImpl((aValue, bValue) => aValue - bValue);\nexport const subComplexImpl = createComplexBinaryKernelImpl((aReal, aImag, bReal, bImag) => {\n  return {\n    real: aReal - bReal,\n    imag: aImag - bImag\n  };\n});\nexport const sub = binaryKernelFunc(Sub, subImpl, subComplexImpl);\nexport const subConfig = {\n  kernelName: Sub,\n  backendName: 'cpu',\n  kernelFunc: sub\n};","map":{"version":3,"names":["Sub","createSimpleBinaryKernelImpl","binaryKernelFunc","createComplexBinaryKernelImpl","subImpl","aValue","bValue","subComplexImpl","aReal","aImag","bReal","bImag","real","imag","sub","subConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Sub.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\n\nimport {createSimpleBinaryKernelImpl} from '../utils/binary_impl';\nimport {binaryKernelFunc, createComplexBinaryKernelImpl} from '../utils/binary_utils';\n\nexport const subImpl = createSimpleBinaryKernelImpl(\n    ((aValue: number, bValue: number) => aValue - bValue));\nexport const subComplexImpl =\n    createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n      return {real: aReal - bReal, imag: aImag - bImag};\n    }));\nexport const sub = binaryKernelFunc(Sub, subImpl, subComplexImpl);\n\nexport const subConfig: KernelConfig = {\n  kernelName: Sub,\n  backendName: 'cpu',\n  kernelFunc: sub\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,GAAG,QAAO,uBAAuB;AAEvD,SAAQC,4BAA4B,QAAO,sBAAsB;AACjE,SAAQC,gBAAgB,EAAEC,6BAA6B,QAAO,uBAAuB;AAErF,OAAO,MAAMC,OAAO,GAAGH,4BAA4B,CAC9C,CAACI,MAAc,EAAEC,MAAc,KAAKD,MAAM,GAAGC,MAAO,CAAC;AAC1D,OAAO,MAAMC,cAAc,GACvBJ,6BAA6B,CAAE,CAACK,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAI;EAC5D,OAAO;IAACC,IAAI,EAAEJ,KAAK,GAAGE,KAAK;IAAEG,IAAI,EAAEJ,KAAK,GAAGE;EAAK,CAAC;AACnD,CAAE,CAAC;AACP,OAAO,MAAMG,GAAG,GAAGZ,gBAAgB,CAACF,GAAG,EAAEI,OAAO,EAAEG,cAAc,CAAC;AAEjE,OAAO,MAAMQ,SAAS,GAAiB;EACrCC,UAAU,EAAEhB,GAAG;EACfiB,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEJ;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}