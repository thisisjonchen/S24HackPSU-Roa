{"ast":null,"code":"import{useEffect,useState}from'react';function LocationTracker(){const[location,setLocation]=useState(null);useEffect(()=>{const intervalId=setInterval(()=>{navigator.geolocation.getCurrentPosition(position=>{setLocation({latitude:position.coords.latitude,longitude:position.coords.longitude});console.log(position.coords.longitude,position.coords.latitude);},error=>console.error(error),{enableHighAccuracy:true});},5000);return()=>clearInterval(intervalId);},[]);//useEffect(() => {\n//    const intervalId = setInterval(() => {\n//        navigator.geolocation.getCurrentPosition(\n//            // captures location (synced every 5 seconds) and sends to backend for processing\n//            (position) => {\n//                ///fetch(\n//                ///    `API`,\n//                ///    {\n//                ///        method: \"PUT\",\n//                ///        body: JSON.stringify({latitude: position.coords.latitude, longitude: position.coords.longitude}),\n//                ///        headers: {\n//                ///            \"Content-Type\": \"application/json\",\n//                ///            \"Access-Control-Allow-Origin\": \"*\"\n//                ///        },\n//                ///    },\n//                ///).then()\n//            },\n//            (error) => console.error(error),\n//            { enableHighAccuracy: true }\n//        );\n//    }, 5000);\n}export default LocationTracker;","map":{"version":3,"names":["useEffect","useState","LocationTracker","location","setLocation","intervalId","setInterval","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","console","log","error","enableHighAccuracy","clearInterval"],"sources":["/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/location.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\n function LocationTracker() {\n     const [location, setLocation] = useState(null);\n     useEffect(() => {\n         const intervalId = setInterval(() => {\n             navigator.geolocation.getCurrentPosition(\n                 (position) => {\n                     setLocation({\n                         latitude: position.coords.latitude,\n                         longitude: position.coords.longitude,\n                     });\n                     console.log(position.coords.longitude, position.coords.latitude)\n                 },\n                 (error) => console.error(error),\n                 { enableHighAccuracy: true }\n             );\n         }, 5000);\n\n         return () => clearInterval(intervalId);\n     }, []);\n\n\n     //useEffect(() => {\n    //    const intervalId = setInterval(() => {\n    //        navigator.geolocation.getCurrentPosition(\n    //            // captures location (synced every 5 seconds) and sends to backend for processing\n    //            (position) => {\n    //                ///fetch(\n    //                ///    `API`,\n    //                ///    {\n    //                ///        method: \"PUT\",\n    //                ///        body: JSON.stringify({latitude: position.coords.latitude, longitude: position.coords.longitude}),\n    //                ///        headers: {\n    //                ///            \"Content-Type\": \"application/json\",\n    //                ///            \"Access-Control-Allow-Origin\": \"*\"\n    //                ///        },\n    //                ///    },\n    //                ///).then()\n    //            },\n    //            (error) => console.error(error),\n    //            { enableHighAccuracy: true }\n    //        );\n    //    }, 5000);\n}\n\nexport default LocationTracker;\n"],"mappings":"AAAA,OAAQA,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAExC,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACvB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGH,QAAQ,CAAC,IAAI,CAAC,CAC9CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAK,UAAU,CAAGC,WAAW,CAAC,IAAM,CACjCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,QAAQ,EAAK,CACVN,WAAW,CAAC,CACRO,QAAQ,CAAED,QAAQ,CAACE,MAAM,CAACD,QAAQ,CAClCE,SAAS,CAAEH,QAAQ,CAACE,MAAM,CAACC,SAC/B,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACE,MAAM,CAACC,SAAS,CAAEH,QAAQ,CAACE,MAAM,CAACD,QAAQ,CAAC,CACpE,CAAC,CACAK,KAAK,EAAKF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAC/B,CAAEC,kBAAkB,CAAE,IAAK,CAC/B,CAAC,CACL,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMC,aAAa,CAACb,UAAU,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAGN;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CAEA,cAAe,CAAAH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}