{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Minimum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greater } from '../ops/greater';\nimport { lessEqual } from '../ops/less_equal';\nimport { mul } from '../ops/mul';\nexport const minimumGradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(lessEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(greater(a, b), 'float32'));\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Minimum","cast","greater","lessEqual","mul","minimumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","derA","derB"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Minimum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Minimum} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {greater} from '../ops/greater';\nimport {lessEqual} from '../ops/less_equal';\nimport {mul} from '../ops/mul';\nimport {Tensor} from '../tensor';\n\nexport const minimumGradConfig: GradConfig = {\n  kernelName: Minimum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(lessEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(greater(a, b), 'float32'));\n    return {a: derA, b: derB};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAO,iBAAiB;AAEvC,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,SAAS,QAAO,mBAAmB;AAC3C,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,MAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEN,OAAO;EACnBO,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,KAAI;IACxC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGF,KAAK;IACpB,MAAMG,IAAI,GAAGA,CAAA,KAAMT,GAAG,CAACK,EAAE,EAAER,IAAI,CAACE,SAAS,CAACQ,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAC5D,MAAME,IAAI,GAAGA,CAAA,KAAMV,GAAG,CAACK,EAAE,EAAER,IAAI,CAACC,OAAO,CAACS,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAC1D,OAAO;MAACD,CAAC,EAAEE,IAAI;MAAED,CAAC,EAAEE;IAAI,CAAC;EAC3B;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}