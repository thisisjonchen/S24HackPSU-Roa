{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImplCPU } from '../kernel_utils/shared';\nexport function stringToHashBucketFast(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    numBuckets\n  } = attrs;\n  const {\n    input\n  } = inputs;\n  if (input.dtype !== 'string') {\n    throw new Error('Input must be of datatype string');\n  }\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n  const $input = backend.readSync(input.dataId);\n  const output = stringToHashBucketFastImplCPU($input, numBuckets);\n  return backend.makeTensorInfo(input.shape, 'int32', output);\n}\nexport const stringToHashBucketFastConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'webgl',\n  kernelFunc: stringToHashBucketFast\n};","map":{"version":3,"names":["StringToHashBucketFast","stringToHashBucketFastImplCPU","stringToHashBucketFast","args","inputs","backend","attrs","numBuckets","input","dtype","Error","$input","readSync","dataId","output","makeTensorInfo","shape","stringToHashBucketFastConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-webgl/src/kernels/StringToHashBucketFast.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, StringToHashBucketFast, StringToHashBucketFastAttrs, StringToHashBucketFastInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {stringToHashBucketFastImplCPU} from '../kernel_utils/shared';\n\nexport function stringToHashBucketFast(args: {\n  inputs: StringToHashBucketFastInputs,\n  backend: MathBackendWebGL,\n  attrs: StringToHashBucketFastAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {numBuckets} = attrs;\n  const {input} = inputs;\n\n  if (input.dtype !== 'string') {\n    throw new Error('Input must be of datatype string');\n  }\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const $input = backend.readSync(input.dataId) as Uint8Array[];\n\n  const output = stringToHashBucketFastImplCPU($input, numBuckets);\n  return backend.makeTensorInfo(input.shape, 'int32', output);\n}\n\nexport const stringToHashBucketFastConfig: KernelConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'webgl',\n  kernelFunc: stringToHashBucketFast as unknown as KernelFunc,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,sBAAsB,QAA8E,uBAAuB;AAG7J,SAAQC,6BAA6B,QAAO,wBAAwB;AAEpE,OAAM,SAAUC,sBAAsBA,CAACC,IAItC;EACC,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAU,CAAC,GAAGD,KAAK;EAC1B,MAAM;IAACE;EAAK,CAAC,GAAGJ,MAAM;EAEtB,IAAII,KAAK,CAACC,KAAK,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;;EAErD,IAAIH,UAAU,IAAI,CAAC,EAAE;IACnB,MAAM,IAAIG,KAAK,CAAC,sCAAsC,CAAC;;EAGzD,MAAMC,MAAM,GAAGN,OAAO,CAACO,QAAQ,CAACJ,KAAK,CAACK,MAAM,CAAiB;EAE7D,MAAMC,MAAM,GAAGb,6BAA6B,CAACU,MAAM,EAAEJ,UAAU,CAAC;EAChE,OAAOF,OAAO,CAACU,cAAc,CAACP,KAAK,CAACQ,KAAK,EAAE,OAAO,EAAEF,MAAM,CAAC;AAC7D;AAEA,OAAO,MAAMG,4BAA4B,GAAiB;EACxDC,UAAU,EAAElB,sBAAsB;EAClCmB,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAElB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}