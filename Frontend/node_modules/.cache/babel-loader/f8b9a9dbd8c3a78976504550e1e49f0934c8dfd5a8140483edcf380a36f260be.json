{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { clipByValue } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.clipByValue = function (min, max) {\n  this.throwIfDisposed();\n  return clipByValue(this, min, max);\n};","map":{"version":3,"names":["clipByValue","getGlobalTensorClass","prototype","min","max","throwIfDisposed"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/public/chained_ops/clip_by_value.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {clipByValue} from '../../ops/ops';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    clipByValue<T extends Tensor>(min: number, max: number): Tensor;\n  }\n}\n\ngetGlobalTensorClass().prototype.clipByValue = function<T extends Tensor>(\n    min: number, max: number): T {\n  this.throwIfDisposed();\n  return clipByValue(this, min, max) as T;\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;AACA,SAAQA,WAAW,QAAO,eAAe;AACzC,SAAQC,oBAAoB,QAAe,cAAc;AASzDA,oBAAoB,EAAE,CAACC,SAAS,CAACF,WAAW,GAAG,UAC3CG,GAAW,EAAEC,GAAW;EAC1B,IAAI,CAACC,eAAe,EAAE;EACtB,OAAOL,WAAW,CAAC,IAAI,EAAEG,GAAG,EAAEC,GAAG,CAAM;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}