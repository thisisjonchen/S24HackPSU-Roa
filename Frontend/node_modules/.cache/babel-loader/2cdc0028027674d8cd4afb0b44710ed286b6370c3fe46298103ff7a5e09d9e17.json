{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cast } from '../kernel_names';\nexport const castGradConfig = {\n  kernelName: Cast,\n  gradFunc: dy => {\n    return {\n      x: () => dy.clone()\n    };\n  }\n};","map":{"version":3,"names":["Cast","castGradConfig","kernelName","gradFunc","dy","x","clone"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Cast_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {Tensor} from '../tensor';\n\nexport const castGradConfig: GradConfig = {\n  kernelName: Cast,\n  gradFunc: (dy: Tensor) => {\n    return {x: () => dy.clone()};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,IAAI,QAAO,iBAAiB;AAIpC,OAAO,MAAMC,cAAc,GAAe;EACxCC,UAAU,EAAEF,IAAI;EAChBG,QAAQ,EAAGC,EAAU,IAAI;IACvB,OAAO;MAACC,CAAC,EAAEA,CAAA,KAAMD,EAAE,CAACE,KAAK;IAAE,CAAC;EAC9B;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}