{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Abs, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function simpleAbsImpl(vals) {\n  const resultValues = new Float32Array(vals.length);\n  for (let i = 0; i < vals.length; ++i) {\n    resultValues[i] = Math.abs(vals[i]);\n  }\n  return resultValues;\n}\nexport const abs = args => {\n  const {\n    x\n  } = args.inputs;\n  const cpuBackend = args.backend;\n  assertNotComplex(x, 'abs');\n  let resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  const values = cpuBackend.data.get(x.dataId).values;\n  resultValues = simpleAbsImpl(values);\n  return cpuBackend.makeOutput(resultValues, x.shape, x.dtype);\n};\nexport const absConfig = {\n  kernelName: Abs,\n  backendName: 'cpu',\n  kernelFunc: abs\n};","map":{"version":3,"names":["Abs","util","assertNotComplex","simpleAbsImpl","vals","resultValues","Float32Array","length","i","Math","abs","args","x","inputs","cpuBackend","backend","sizeFromShape","shape","values","data","get","dataId","makeOutput","dtype","absConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Abs.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Abs, AbsInputs, KernelConfig, KernelFunc, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport function simpleAbsImpl(vals: TypedArray): Float32Array {\n  const resultValues = new Float32Array(vals.length);\n  for (let i = 0; i < vals.length; ++i) {\n    resultValues[i] = Math.abs(vals[i]);\n  }\n  return resultValues;\n}\n\nexport const abs = (args: {inputs: AbsInputs, backend: MathBackendCPU}) => {\n  const {x} = args.inputs;\n  const cpuBackend = args.backend;\n\n  assertNotComplex(x, 'abs');\n\n  let resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  const values = cpuBackend.data.get(x.dataId).values as TypedArray;\n  resultValues = simpleAbsImpl(values);\n\n  return cpuBackend.makeOutput(resultValues, x.shape, x.dtype);\n};\n\nexport const absConfig: KernelConfig = {\n  kernelName: Abs,\n  backendName: 'cpu',\n  kernelFunc: abs as unknown as KernelFunc,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,EAAmDC,IAAI,QAAO,uBAAuB;AAGhG,SAAQC,gBAAgB,QAAO,aAAa;AAE5C,OAAM,SAAUC,aAAaA,CAACC,IAAgB;EAC5C,MAAMC,YAAY,GAAG,IAAIC,YAAY,CAACF,IAAI,CAACG,MAAM,CAAC;EAClD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAE,EAAEC,CAAC,EAAE;IACpCH,YAAY,CAACG,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACN,IAAI,CAACI,CAAC,CAAC,CAAC;;EAErC,OAAOH,YAAY;AACrB;AAEA,OAAO,MAAMK,GAAG,GAAIC,IAAkD,IAAI;EACxE,MAAM;IAACC;EAAC,CAAC,GAAGD,IAAI,CAACE,MAAM;EACvB,MAAMC,UAAU,GAAGH,IAAI,CAACI,OAAO;EAE/Bb,gBAAgB,CAACU,CAAC,EAAE,KAAK,CAAC;EAE1B,IAAIP,YAAY,GAAG,IAAIC,YAAY,CAACL,IAAI,CAACe,aAAa,CAACJ,CAAC,CAACK,KAAK,CAAC,CAAC;EAChE,MAAMC,MAAM,GAAGJ,UAAU,CAACK,IAAI,CAACC,GAAG,CAACR,CAAC,CAACS,MAAM,CAAC,CAACH,MAAoB;EACjEb,YAAY,GAAGF,aAAa,CAACe,MAAM,CAAC;EAEpC,OAAOJ,UAAU,CAACQ,UAAU,CAACjB,YAAY,EAAEO,CAAC,CAACK,KAAK,EAAEL,CAAC,CAACW,KAAK,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMC,SAAS,GAAiB;EACrCC,UAAU,EAAEzB,GAAG;EACf0B,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEjB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}