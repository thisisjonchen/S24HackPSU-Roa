{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'ResizeBilinear',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'align_corners',\n    'name': 'alignCorners',\n    'type': 'bool'\n  }, {\n    'tfName': 'half_pixel_centers',\n    'name': 'halfPixelCenters',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'ResizeNearestNeighbor',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'align_corners',\n    'name': 'alignCorners',\n    'type': 'bool'\n  }, {\n    'tfName': 'half_pixel_centers',\n    'name': 'halfPixelCenters',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'CropAndResize',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'image',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'boxes',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'boxInd',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'cropSize',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'method',\n    'name': 'method',\n    'type': 'string'\n  }, {\n    'tfName': 'extrapolation_value',\n    'name': 'extrapolationValue',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'ImageProjectiveTransformV3',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'transforms',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'fillValue',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'interpolation',\n    'name': 'interpolation',\n    'type': 'string'\n  }, {\n    'tfName': 'fill_mode',\n    'name': 'fillMode',\n    'type': 'string'\n  }]\n}];","map":{"version":3,"names":["json"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-converter/src/operations/op_list/image.ts"],"sourcesContent":["\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'image',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'boxInd',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'cropSize',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'method',\n        'name': 'method',\n        'type': 'string'\n      },\n      {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ImageProjectiveTransformV3',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'transforms',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'outputShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'fillValue',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'interpolation',\n        'name': 'interpolation',\n        'type': 'string'\n      },\n      {\n        'tfName': 'fill_mode',\n        'name': 'fillMode',\n        'type': 'string'\n      }\n    ]\n  }\n];\n"],"mappings":"AACA;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMA,IAAI,GAAe,CAC9B;EACE,UAAU,EAAE,gBAAgB;EAC5B,UAAU,EAAE,OAAO;EACnB,QAAQ,EAAE,CACR;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,MAAM;IACd,MAAM,EAAE;GACT,CACF;EACD,OAAO,EAAE,CACP;IACE,QAAQ,EAAE,eAAe;IACzB,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,oBAAoB;IAC9B,MAAM,EAAE,kBAAkB;IAC1B,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,OAAO;IACf,cAAc,EAAE;GACjB;CAEJ,EACD;EACE,UAAU,EAAE,uBAAuB;EACnC,UAAU,EAAE,OAAO;EACnB,QAAQ,EAAE,CACR;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,MAAM;IACd,MAAM,EAAE;GACT,CACF;EACD,OAAO,EAAE,CACP;IACE,QAAQ,EAAE,eAAe;IACzB,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,oBAAoB;IAC9B,MAAM,EAAE,kBAAkB;IAC1B,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,GAAG;IACb,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,OAAO;IACf,cAAc,EAAE;GACjB;CAEJ,EACD;EACE,UAAU,EAAE,eAAe;EAC3B,UAAU,EAAE,OAAO;EACnB,QAAQ,EAAE,CACR;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;GACT,CACF;EACD,OAAO,EAAE,CACP;IACE,QAAQ,EAAE,QAAQ;IAClB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,qBAAqB;IAC/B,MAAM,EAAE,oBAAoB;IAC5B,MAAM,EAAE;GACT;CAEJ,EACD;EACE,UAAU,EAAE,4BAA4B;EACxC,UAAU,EAAE,OAAO;EACnB,QAAQ,EAAE,CACR;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,YAAY;IACpB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE;GACT,EACD;IACE,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,WAAW;IACnB,MAAM,EAAE;GACT,CACF;EACD,OAAO,EAAE,CACP;IACE,QAAQ,EAAE,eAAe;IACzB,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE;GACT,EACD;IACE,QAAQ,EAAE,WAAW;IACrB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;GACT;CAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}