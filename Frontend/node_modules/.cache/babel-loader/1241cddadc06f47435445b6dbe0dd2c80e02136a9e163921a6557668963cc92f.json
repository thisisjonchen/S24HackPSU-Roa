{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StaticRegexReplace } from '@tensorflow/tfjs-core';\nimport { createSimpleUnaryImpl } from '../utils/unary_impl';\nimport { unaryKernelFuncFromImpl } from '../utils/unary_utils';\nexport const staticRegexReplaceImpl = createSimpleUnaryImpl((x, attrs) => {\n  const {\n    pattern,\n    replaceGlobal,\n    rewrite\n  } = attrs;\n  // TODO(mattSoulanille): Don't create a regex each time.\n  return x.replace(new RegExp(pattern, replaceGlobal ? 'g' : ''), rewrite);\n});\nconst staticRegexReplace = unaryKernelFuncFromImpl(StaticRegexReplace, staticRegexReplaceImpl);\nexport const staticRegexReplaceConfig = {\n  kernelName: StaticRegexReplace,\n  backendName: 'cpu',\n  kernelFunc: staticRegexReplace\n};","map":{"version":3,"names":["StaticRegexReplace","createSimpleUnaryImpl","unaryKernelFuncFromImpl","staticRegexReplaceImpl","x","attrs","pattern","replaceGlobal","rewrite","replace","RegExp","staticRegexReplace","staticRegexReplaceConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/StaticRegexReplace.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, StaticRegexReplace, StaticRegexReplaceAttrs} from '@tensorflow/tfjs-core';\nimport {createSimpleUnaryImpl} from '../utils/unary_impl';\nimport {unaryKernelFuncFromImpl} from '../utils/unary_utils';\n\nexport const staticRegexReplaceImpl = createSimpleUnaryImpl<string,\n  string>((x: string, attrs) => {\n    const {pattern, replaceGlobal, rewrite} =\n      attrs as unknown as StaticRegexReplaceAttrs;\n    // TODO(mattSoulanille): Don't create a regex each time.\n    return x.replace(new RegExp(pattern, replaceGlobal ? 'g' : ''), rewrite);\n});\n\nconst staticRegexReplace =\n  unaryKernelFuncFromImpl(StaticRegexReplace, staticRegexReplaceImpl);\n\nexport const staticRegexReplaceConfig: KernelConfig = {\n  kernelName: StaticRegexReplace,\n  backendName: 'cpu',\n  kernelFunc: staticRegexReplace,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,kBAAkB,QAAgC,uBAAuB;AAC/F,SAAQC,qBAAqB,QAAO,qBAAqB;AACzD,SAAQC,uBAAuB,QAAO,sBAAsB;AAE5D,OAAO,MAAMC,sBAAsB,GAAGF,qBAAqB,CACjD,CAACG,CAAS,EAAEC,KAAK,KAAI;EAC3B,MAAM;IAACC,OAAO;IAAEC,aAAa;IAAEC;EAAO,CAAC,GACrCH,KAA2C;EAC7C;EACA,OAAOD,CAAC,CAACK,OAAO,CAAC,IAAIC,MAAM,CAACJ,OAAO,EAAEC,aAAa,GAAG,GAAG,GAAG,EAAE,CAAC,EAAEC,OAAO,CAAC;AAC5E,CAAC,CAAC;AAEF,MAAMG,kBAAkB,GACtBT,uBAAuB,CAACF,kBAAkB,EAAEG,sBAAsB,CAAC;AAErE,OAAO,MAAMS,wBAAwB,GAAiB;EACpDC,UAAU,EAAEb,kBAAkB;EAC9Bc,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEJ;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}