{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport const step = unaryKernelFunc(Step, (xi, attrs) => {\n  const stepAttrs = attrs;\n  if (isNaN(xi)) {\n    return NaN;\n  } else {\n    return xi > 0 ? 1 : stepAttrs.alpha;\n  }\n});\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'cpu',\n  kernelFunc: step\n};","map":{"version":3,"names":["Step","unaryKernelFunc","step","xi","attrs","stepAttrs","isNaN","NaN","alpha","stepConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Step.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Step, StepAttrs} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const step = unaryKernelFunc(Step, (xi, attrs) => {\n  const stepAttrs = attrs as unknown as StepAttrs;\n  if (isNaN(xi)) {\n    return NaN;\n  } else {\n    return xi > 0 ? 1 : stepAttrs.alpha;\n  }\n});\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'cpu',\n  kernelFunc: step,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAsBA,IAAI,QAAkB,uBAAuB;AAEnE,SAAQC,eAAe,QAAO,sBAAsB;AAEpD,OAAO,MAAMC,IAAI,GAAGD,eAAe,CAACD,IAAI,EAAE,CAACG,EAAE,EAAEC,KAAK,KAAI;EACtD,MAAMC,SAAS,GAAGD,KAA6B;EAC/C,IAAIE,KAAK,CAACH,EAAE,CAAC,EAAE;IACb,OAAOI,GAAG;GACX,MAAM;IACL,OAAOJ,EAAE,GAAG,CAAC,GAAG,CAAC,GAAGE,SAAS,CAACG,KAAK;;AAEvC,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAiB;EACtCC,UAAU,EAAEV,IAAI;EAChBW,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEV;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}