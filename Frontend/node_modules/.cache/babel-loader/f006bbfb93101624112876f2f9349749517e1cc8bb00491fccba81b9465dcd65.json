{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReverseProgram {\n  constructor(xShape, axis) {\n    this.variableNames = ['x'];\n    const rank = xShape.length;\n    if (rank > 4) {\n      throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n    this.outputShape = xShape;\n    if (rank === 1) {\n      this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n      return;\n    }\n    const getInCoord = i => {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - coords[${i}] - 1`;\n      }\n      return `coords[${i}]`;\n    };\n    const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n    const type = getCoordsDataType(rank);\n    this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n  }\n}","map":{"version":3,"names":["getCoordsDataType","ReverseProgram","constructor","xShape","axis","variableNames","rank","length","Error","outputShape","userCode","getInCoord","i","indexOf","inCoords","map","_","join","type"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-webgl/src/reverse_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ReverseProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(xShape: number[], axis: number[]) {\n    const rank = xShape.length;\n    if (rank > 4) {\n      throw new Error(\n          `WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n    this.outputShape = xShape;\n\n    if (rank === 1) {\n      this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n      return;\n    }\n    const getInCoord = (i: number) => {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - coords[${i}] - 1`;\n      }\n      return `coords[${i}]`;\n    };\n    const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n    const type = getCoordsDataType(rank);\n\n    this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAAQA,iBAAiB,QAAO,mBAAmB;AAEnD,OAAM,MAAOC,cAAc;EAKzBC,YAAYC,MAAgB,EAAEC,IAAc;IAJ5C,KAAAC,aAAa,GAAG,CAAC,GAAG,CAAC;IAKnB,MAAMC,IAAI,GAAGH,MAAM,CAACI,MAAM;IAC1B,IAAID,IAAI,GAAG,CAAC,EAAE;MACZ,MAAM,IAAIE,KAAK,CACX,kCAAkCF,IAAI,8BAA8B,CAAC;;IAE3E,IAAI,CAACG,WAAW,GAAGN,MAAM;IAEzB,IAAIG,IAAI,KAAK,CAAC,EAAE;MACd,IAAI,CAACI,QAAQ,GAAG;;;2BAGKP,MAAM,CAAC,CAAC,CAAC;;OAE7B;MACD;;IAEF,MAAMQ,UAAU,GAAIC,CAAS,IAAI;MAC/B,IAAIR,IAAI,CAACS,OAAO,CAACD,CAAC,CAAC,KAAK,CAAC,CAAC,IAAIT,MAAM,CAACS,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7C,OAAO,GAAGT,MAAM,CAACS,CAAC,CAAC,aAAaA,CAAC,OAAO;;MAE1C,OAAO,UAAUA,CAAC,GAAG;IACvB,CAAC;IACD,MAAME,QAAQ,GAAGX,MAAM,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEJ,CAAC,KAAKD,UAAU,CAACC,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;IAC9D,MAAMC,IAAI,GAAGlB,iBAAiB,CAACM,IAAI,CAAC;IAEpC,IAAI,CAACI,QAAQ,GAAG;;UAEVQ,IAAI;yBACWJ,QAAQ;;KAE5B;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}