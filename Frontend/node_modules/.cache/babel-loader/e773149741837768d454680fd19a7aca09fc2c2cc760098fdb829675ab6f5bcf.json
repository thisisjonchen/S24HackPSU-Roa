{"ast":null,"code":"var _jsxFileName = \"/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebcamRecorder() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [stream, setStream] = useState(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunks = useRef([]);\n  const captureInterval = useRef(null);\n  const logo = new Image();\n  logo.src = logoImage;\n  useEffect(() => {\n    const handleResize = () => {\n      if (videoRef.current && canvasRef.current) {\n        const videoHeight = window.innerHeight * 0.8;\n        videoRef.current.style.maxHeight = `${videoHeight}px`;\n        canvasRef.current.style.maxHeight = `${videoHeight}px`;\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    startRecording();\n  }, []);\n  const startRecording = async () => {\n    try {\n      const constraints = {\n        video: {\n          width: 720,\n          height: 1280\n        }\n      };\n      const newStream = await navigator.mediaDevices.getUserMedia(constraints);\n      setStream(newStream);\n      const mediaRecorder = new MediaRecorder(newStream);\n      mediaRecorder.start();\n      setIsRecording(true);\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        recordedChunks.current.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(recordedChunks.current, {\n          type: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n        });\n        const url = URL.createObjectURL(blob);\n        console.log('Recorded video URL:', url);\n        recordedChunks.current = [];\n      };\n      videoRef.current.srcObject = newStream;\n      captureInterval.current = setInterval(captureImage, 100); // Capture every 100ms (adjust as needed)\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n    }\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      setStream(null);\n      videoRef.current.srcObject = null;\n    }\n    if (captureInterval.current) {\n      clearInterval(captureInterval.current);\n    }\n    setIsRecording(false);\n  };\n  const captureImage = () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Draw the logo on the canvas\n    const logoWidth = 100; // Adjust the logo width as needed\n    const logoHeight = logoWidth / logo.width * logo.height;\n    const x = canvas.width - logoWidth - 10; // Adjust the x position as needed\n    const y = 10; // Adjust the y position as needed\n    ctx.drawImage(logo, x, y, logoWidth, logoHeight);\n    const imageData = canvas.toDataURL('image/webp', 0.8); // Adjust the quality if needed\n    const chunks = mediaRecorderRef.current.ondataavailable.bind(mediaRecorderRef.current)(new Blob([imageData], {\n      type: 'image/webp'\n    }));\n    recordedChunks.current.push(chunks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"recording\",\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button stop\",\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(WebcamRecorder, \"Hpaqb4EXbH55gQqW2DBzZw/TjEU=\");\n_c = WebcamRecorder;\nexport default WebcamRecorder;\nvar _c;\n$RefreshReg$(_c, \"WebcamRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","WebcamRecorder","_s","isRecording","setIsRecording","stream","setStream","videoRef","canvasRef","mediaRecorderRef","recordedChunks","captureInterval","logo","Image","src","logoImage","handleResize","current","videoHeight","window","innerHeight","style","maxHeight","addEventListener","removeEventListener","startRecording","constraints","video","width","height","newStream","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","start","ondataavailable","event","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","console","log","srcObject","setInterval","captureImage","error","stopRecording","state","stop","getTracks","forEach","track","clearInterval","canvas","videoWidth","ctx","getContext","drawImage","logoWidth","logoHeight","x","y","imageData","toDataURL","chunks","bind","children","className","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","display","onClick","_c","$RefreshReg$"],"sources":["/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction WebcamRecorder() {\n    const [isRecording, setIsRecording] = useState(false);\n    const [stream, setStream] = useState(null);\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunks = useRef([]);\n    const captureInterval = useRef(null);\n    const logo = new Image();\n    logo.src = logoImage;\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (videoRef.current && canvasRef.current) {\n                const videoHeight = window.innerHeight * 0.8;\n                videoRef.current.style.maxHeight = `${videoHeight}px`;\n                canvasRef.current.style.maxHeight = `${videoHeight}px`;\n            }\n        };\n\n        handleResize();\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    useEffect(() => {\n        startRecording();\n    }, []);\n\n    const startRecording = async () => {\n        try {\n            const constraints = { video: { width: 720, height: 1280 } };\n            const newStream = await navigator.mediaDevices.getUserMedia(constraints);\n            setStream(newStream);\n            const mediaRecorder = new MediaRecorder(newStream);\n\n            mediaRecorder.start();\n            setIsRecording(true);\n\n            mediaRecorderRef.current = mediaRecorder;\n            mediaRecorder.ondataavailable = (event) => {\n                recordedChunks.current.push(event.data);\n            };\n\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(recordedChunks.current, { type: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"' });\n                const url = URL.createObjectURL(blob);\n                console.log('Recorded video URL:', url);\n                recordedChunks.current = [];\n            };\n\n            videoRef.current.srcObject = newStream;\n\n            captureInterval.current = setInterval(captureImage, 100); // Capture every 100ms (adjust as needed)\n        } catch (error) {\n            console.error('Error accessing webcam:', error);\n        }\n    };\n\n    const stopRecording = () => {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n        }\n        if (stream) {\n            stream.getTracks().forEach((track) => track.stop());\n            setStream(null);\n            videoRef.current.srcObject = null;\n        }\n        if (captureInterval.current) {\n            clearInterval(captureInterval.current);\n        }\n        setIsRecording(false);\n    };\n\n    const captureImage = () => {\n        const canvas = canvasRef.current;\n        const video = videoRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Draw the logo on the canvas\n        const logoWidth = 100; // Adjust the logo width as needed\n        const logoHeight = (logoWidth / logo.width) * logo.height;\n        const x = canvas.width - logoWidth - 10; // Adjust the x position as needed\n        const y = 10; // Adjust the y position as needed\n        ctx.drawImage(logo, x, y, logoWidth, logoHeight);\n\n        const imageData = canvas.toDataURL('image/webp', 0.8); // Adjust the quality if needed\n        const chunks = mediaRecorderRef.current.ondataavailable.bind(mediaRecorderRef.current)(new Blob([imageData], { type: 'image/webp' }));\n        recordedChunks.current.push(chunks);\n    };\n\n    return (\n        <div>\n            <video className=\"recording\" ref={videoRef} autoPlay></video>\n            <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\n            <div>\n                {isRecording ? (\n                    <button className=\"button stop\" onClick={stopRecording}>Stop Recording</button>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n\nexport default WebcamRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}