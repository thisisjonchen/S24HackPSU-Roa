{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRN } from '../kernel_names';\nimport { localResponseNormalizationBackprop } from '../ops/local_response_normalization_backprop';\nexport const lrnGradConfig = {\n  kernelName: LRN,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy, saved, attrs) => {\n    const [x, y] = saved;\n    const {\n      depthRadius,\n      bias,\n      alpha,\n      beta\n    } = attrs;\n    return {\n      x: () => localResponseNormalizationBackprop(x, y, dy, depthRadius, bias, alpha, beta)\n    };\n  }\n};","map":{"version":3,"names":["LRN","localResponseNormalizationBackprop","lrnGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","x","y","depthRadius","bias","alpha","beta"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/LRN_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {LRN, LRNAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {localResponseNormalizationBackprop} from '../ops/local_response_normalization_backprop';\nimport {Tensor, Tensor4D} from '../tensor';\n\nexport const lrnGradConfig: GradConfig = {\n  kernelName: LRN,\n  inputsToSave: ['x'],\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x, y] = saved as [Tensor4D, Tensor4D];\n    const {depthRadius, bias, alpha, beta} = attrs as unknown as LRNAttrs;\n\n    return {\n      x: () => localResponseNormalizationBackprop(\n          x, y, dy, depthRadius, bias, alpha, beta)\n    };\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,GAAG,QAAiB,iBAAiB;AAE7C,SAAQC,kCAAkC,QAAO,8CAA8C;AAG/F,OAAO,MAAMC,aAAa,GAAe;EACvCC,UAAU,EAAEH,GAAG;EACfI,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,QAAQ,EAAEA,CAACC,EAAY,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC/D,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAA6B;IAC5C,MAAM;MAACI,WAAW;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAI,CAAC,GAAGN,KAA4B;IAErE,OAAO;MACLC,CAAC,EAAEA,CAAA,KAAMT,kCAAkC,CACvCS,CAAC,EAAEC,CAAC,EAAEJ,EAAE,EAAEK,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI;KAC7C;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}