{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n  const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n  const attrs = {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold\n  };\n  return ENGINE.runKernel(NonMaxSuppressionV3, {\n    boxes: $boxes,\n    scores: $scores\n  }, attrs);\n}\nexport const nonMaxSuppression = /* @__PURE__ */op({\n  nonMaxSuppression_\n});","map":{"version":3,"names":["ENGINE","NonMaxSuppressionV3","convertToTensor","nonMaxSuppSanityCheck","op","nonMaxSuppression_","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","Number","NEGATIVE_INFINITY","$boxes","$scores","inputs","attrs","runKernel","nonMaxSuppression"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/ops/image/non_max_suppression.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../../engine';\nimport {NonMaxSuppressionV3} from '../../kernel_names';\nimport {Tensor1D, Tensor2D} from '../../tensor';\nimport {convertToTensor} from '../../tensor_util_env';\nimport {TensorLike} from '../../types';\nimport {nonMaxSuppSanityCheck} from '../nonmax_util';\nimport {op} from '../operation';\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Tensor1D {\n  const $boxes =\n      convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n  const $scores =\n      convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const attrs = {maxOutputSize, iouThreshold, scoreThreshold};\n  return ENGINE.runKernel(\n      NonMaxSuppressionV3, {boxes: $boxes, scores: $scores}, attrs);\n}\n\nexport const nonMaxSuppression = /* @__PURE__ */ op({nonMaxSuppression_});\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAO,cAAc;AACnC,SAAQC,mBAAmB,QAAO,oBAAoB;AAEtD,SAAQC,eAAe,QAAO,uBAAuB;AAErD,SAAQC,qBAAqB,QAAO,gBAAgB;AACpD,SAAQC,EAAE,QAAO,cAAc;AAE/B;;;;;;;;;;;;;;;;;;AAkBA,SAASC,kBAAkBA,CACvBC,KAA0B,EAAEC,MAA2B,EACvDC,aAAqB,EAAEC,YAAY,GAAG,GAAG,EACzCC,cAAc,GAAGC,MAAM,CAACC,iBAAiB;EAC3C,MAAMC,MAAM,GACRX,eAAe,CAACI,KAAK,EAAE,OAAO,EAAE,mBAAmB,EAAE,SAAS,CAAC;EACnE,MAAMQ,OAAO,GACTZ,eAAe,CAACK,MAAM,EAAE,QAAQ,EAAE,mBAAmB,EAAE,SAAS,CAAC;EAErE,MAAMQ,MAAM,GAAGZ,qBAAqB,CAChCU,MAAM,EAAEC,OAAO,EAAEN,aAAa,EAAEC,YAAY,EAAEC,cAAc,CAAC;EACjEF,aAAa,GAAGO,MAAM,CAACP,aAAa;EACpCC,YAAY,GAAGM,MAAM,CAACN,YAAY;EAClCC,cAAc,GAAGK,MAAM,CAACL,cAAc;EAEtC,MAAMM,KAAK,GAAG;IAACR,aAAa;IAAEC,YAAY;IAAEC;EAAc,CAAC;EAC3D,OAAOV,MAAM,CAACiB,SAAS,CACnBhB,mBAAmB,EAAE;IAACK,KAAK,EAAEO,MAAM;IAAEN,MAAM,EAAEO;EAAO,CAAC,EAAEE,KAAK,CAAC;AACnE;AAEA,OAAO,MAAME,iBAAiB,GAAG,eAAgBd,EAAE,CAAC;EAACC;AAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}