{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport const squareConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: ({\n    inputs,\n    backend\n  }) => {\n    const {\n      x\n    } = inputs;\n    const cpuBackend = backend;\n    assertNotComplex(x, 'square');\n    const values = cpuBackend.data.get(x.dataId).values;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n    const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {\n      dataId,\n      shape: x.shape,\n      dtype: x.dtype\n    };\n  }\n};","map":{"version":3,"names":["Square","assertNotComplex","squareConfig","kernelName","backendName","kernelFunc","inputs","backend","x","cpuBackend","values","data","get","dataId","newValues","Float32Array","length","i","value","write","shape","dtype"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Square.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Square, SquareInputs} from '@tensorflow/tfjs-core';\nimport {KernelConfig} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport const squareConfig: KernelConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend}) => {\n    const {x} = inputs as SquareInputs;\n    const cpuBackend = backend as MathBackendCPU;\n    assertNotComplex(x, 'square');\n\n    const values = cpuBackend.data.get(x.dataId).values as Float32Array;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n    const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {dataId, shape: x.shape, dtype: x.dtype};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAqB,uBAAuB;AAG1D,SAAQC,gBAAgB,QAAO,aAAa;AAE5C,OAAO,MAAMC,YAAY,GAAiB;EACxCC,UAAU,EAAEH,MAAM;EAClBI,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEA,CAAC;IAACC,MAAM;IAAEC;EAAO,CAAC,KAAI;IAChC,MAAM;MAACC;IAAC,CAAC,GAAGF,MAAsB;IAClC,MAAMG,UAAU,GAAGF,OAAyB;IAC5CN,gBAAgB,CAACO,CAAC,EAAE,QAAQ,CAAC;IAE7B,MAAME,MAAM,GAAGD,UAAU,CAACE,IAAI,CAACC,GAAG,CAACJ,CAAC,CAACK,MAAM,CAAC,CAACH,MAAsB;IACnE,MAAMI,SAAS,GAAG,IAAIC,YAAY,CAACL,MAAM,CAACM,MAAM,CAAC;IACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACM,MAAM,EAAE,EAAEC,CAAC,EAAE;MACtC,MAAMC,KAAK,GAAGR,MAAM,CAACO,CAAC,CAAC;MACvBH,SAAS,CAACG,CAAC,CAAC,GAAGC,KAAK,GAAGA,KAAK;;IAE9B,MAAML,MAAM,GAAGJ,UAAU,CAACU,KAAK,CAACL,SAAS,EAAEN,CAAC,CAACY,KAAK,EAAEZ,CAAC,CAACa,KAAK,CAAC;IAC5D,OAAO;MAACR,MAAM;MAAEO,KAAK,EAAEZ,CAAC,CAACY,KAAK;MAAEC,KAAK,EAAEb,CAAC,CAACa;IAAK,CAAC;EACjD;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}