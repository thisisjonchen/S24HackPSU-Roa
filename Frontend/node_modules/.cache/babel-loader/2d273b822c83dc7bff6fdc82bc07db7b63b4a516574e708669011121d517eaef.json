{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class FillProgram {\n  constructor(shape, value) {\n    this.outputShape = [];\n    this.customUniforms = [{\n      name: 'value',\n      type: 'float'\n    }];\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n    this.userCode = `\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    `;\n  }\n}","map":{"version":3,"names":["FillProgram","constructor","shape","value","outputShape","customUniforms","name","type","variableNames","userCode"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-webgl/src/fill_gpu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {UniformType} from './shader_compiler';\n\nexport class FillProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n  customUniforms = [{name: 'value', type: 'float' as UniformType}];\n\n  constructor(shape: number[], value: number) {\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n\n    this.userCode = `\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    `;\n  }\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAoBA,OAAM,MAAOA,WAAW;EAMtBC,YAAYC,KAAe,EAAEC,KAAa;IAJ1C,KAAAC,WAAW,GAAa,EAAE;IAE1B,KAAAC,cAAc,GAAG,CAAC;MAACC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAsB,CAAC,CAAC;IAG9D,IAAI,CAACC,aAAa,GAAG,CAAC,GAAG,CAAC;IAC1B,IAAI,CAACJ,WAAW,GAAGF,KAAK;IAExB,IAAI,CAACO,QAAQ,GAAG;;;;;KAKf;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}