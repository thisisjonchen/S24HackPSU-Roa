{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ResizeBilinear, ResizeBilinearGrad } from '../kernel_names';\nexport const resizeBilinearGradConfig = {\n  kernelName: ResizeBilinear,\n  inputsToSave: ['images'],\n  gradFunc: (dy, saved, attrs) => {\n    const [images] = saved;\n    const inputs = {\n      dy,\n      images\n    };\n    const imagesDer = () =>\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    ENGINE.runKernel(ResizeBilinearGrad, inputs, attrs);\n    return {\n      images: imagesDer\n    };\n  }\n};","map":{"version":3,"names":["ENGINE","ResizeBilinear","ResizeBilinearGrad","resizeBilinearGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","images","inputs","imagesDer","runKernel"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/ResizeBilinear_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {ResizeBilinear, ResizeBilinearGrad, ResizeBilinearGradInputs} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {NamedAttrMap} from '../kernel_registry';\nimport {Tensor, Tensor4D} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\n\nexport const resizeBilinearGradConfig: GradConfig = {\n  kernelName: ResizeBilinear,\n  inputsToSave: ['images'],\n  gradFunc: (dy: Tensor4D, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [images] = saved;\n\n    const inputs: ResizeBilinearGradInputs = {dy, images};\n    const imagesDer = () =>\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        ENGINE.runKernel(\n            ResizeBilinearGrad, inputs as unknown as NamedTensorMap, attrs) as\n        Tensor4D;\n\n    return {images: imagesDer};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,cAAc,EAAEC,kBAAkB,QAAiC,iBAAiB;AAM5F,OAAO,MAAMC,wBAAwB,GAAe;EAClDC,UAAU,EAAEH,cAAc;EAC1BI,YAAY,EAAE,CAAC,QAAQ,CAAC;EACxBC,QAAQ,EAAEA,CAACC,EAAY,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC/D,MAAM,CAACC,MAAM,CAAC,GAAGF,KAAK;IAEtB,MAAMG,MAAM,GAA6B;MAACJ,EAAE;MAAEG;IAAM,CAAC;IACrD,MAAME,SAAS,GAAGA,CAAA;IACd;IACAZ,MAAM,CAACa,SAAS,CACZX,kBAAkB,EAAES,MAAmC,EAAEF,KAAK,CAC1D;IAEZ,OAAO;MAACC,MAAM,EAAEE;IAAS,CAAC;EAC5B;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}