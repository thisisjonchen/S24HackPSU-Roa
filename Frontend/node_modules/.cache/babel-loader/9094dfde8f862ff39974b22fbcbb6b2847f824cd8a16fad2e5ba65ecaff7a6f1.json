{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Selu } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { exp } from '../ops/exp';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { SELU_SCALE, SELU_SCALEALPHA } from '../ops/selu_util';\nimport { where } from '../ops/where';\nexport const seluGradConfig = {\n  kernelName: Selu,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved) => {\n    const [x] = saved;\n    return {\n      x: () => {\n        const mask = greater(x, scalar(0));\n        const scaleAlpha = scalar(SELU_SCALEALPHA);\n        const scale = scalar(SELU_SCALE);\n        const greaterThanZeroDer = mul(dy, scale);\n        const lessEqualZeroDer = mul(mul(dy, scaleAlpha), exp(cast(x, 'float32')));\n        return where(mask, greaterThanZeroDer, lessEqualZeroDer);\n      }\n    };\n  }\n};","map":{"version":3,"names":["Selu","cast","exp","greater","mul","scalar","SELU_SCALE","SELU_SCALEALPHA","where","seluGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","x","mask","scaleAlpha","scale","greaterThanZeroDer","lessEqualZeroDer"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Selu_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Selu} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {exp} from '../ops/exp';\nimport {greater} from '../ops/greater';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {SELU_SCALE, SELU_SCALEALPHA} from '../ops/selu_util';\nimport {where} from '../ops/where';\nimport {Tensor} from '../tensor';\n\nexport const seluGradConfig: GradConfig = {\n  kernelName: Selu,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [x] = saved;\n    return {\n      x: () => {\n        const mask = greater(x, scalar(0));\n\n        const scaleAlpha = scalar(SELU_SCALEALPHA);\n        const scale = scalar(SELU_SCALE);\n\n        const greaterThanZeroDer = mul(dy, scale);\n        const lessEqualZeroDer =\n            mul(mul(dy, scaleAlpha), exp(cast(x, 'float32')));\n\n        return where(mask, greaterThanZeroDer, lessEqualZeroDer);\n      }\n    };\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAAQA,IAAI,QAAO,iBAAiB;AAEpC,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AACtC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,UAAU,EAAEC,eAAe,QAAO,kBAAkB;AAC5D,SAAQC,KAAK,QAAO,cAAc;AAGlC,OAAO,MAAMC,cAAc,GAAe;EACxCC,UAAU,EAAEV,IAAI;EAChBW,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,KAAI;IACxC,MAAM,CAACC,CAAC,CAAC,GAAGD,KAAK;IACjB,OAAO;MACLC,CAAC,EAAEA,CAAA,KAAK;QACN,MAAMC,IAAI,GAAGb,OAAO,CAACY,CAAC,EAAEV,MAAM,CAAC,CAAC,CAAC,CAAC;QAElC,MAAMY,UAAU,GAAGZ,MAAM,CAACE,eAAe,CAAC;QAC1C,MAAMW,KAAK,GAAGb,MAAM,CAACC,UAAU,CAAC;QAEhC,MAAMa,kBAAkB,GAAGf,GAAG,CAACS,EAAE,EAAEK,KAAK,CAAC;QACzC,MAAME,gBAAgB,GAClBhB,GAAG,CAACA,GAAG,CAACS,EAAE,EAAEI,UAAU,CAAC,EAAEf,GAAG,CAACD,IAAI,CAACc,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;QAErD,OAAOP,KAAK,CAACQ,IAAI,EAAEG,kBAAkB,EAAEC,gBAAgB,CAAC;MAC1D;KACD;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}