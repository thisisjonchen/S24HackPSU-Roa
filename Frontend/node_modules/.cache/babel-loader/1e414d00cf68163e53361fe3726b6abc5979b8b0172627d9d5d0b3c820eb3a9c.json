{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nconst scaleAlpha = backend_util.SELU_SCALEALPHA;\nconst scale = backend_util.SELU_SCALE;\nexport const selu = unaryKernelFunc(Selu, xi => {\n  if (xi >= 0) {\n    return scale * xi;\n  } else {\n    return scaleAlpha * (Math.exp(xi) - 1);\n  }\n});\nexport const seluConfig = {\n  kernelName: Selu,\n  backendName: 'cpu',\n  kernelFunc: selu\n};","map":{"version":3,"names":["backend_util","Selu","unaryKernelFunc","scaleAlpha","SELU_SCALEALPHA","scale","SELU_SCALE","selu","xi","Math","exp","seluConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Selu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, Selu} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nconst scaleAlpha = backend_util.SELU_SCALEALPHA;\nconst scale = backend_util.SELU_SCALE;\n\nexport const selu = unaryKernelFunc(Selu, (xi) => {\n  if (xi >= 0) {\n    return scale * xi;\n  } else {\n    return scaleAlpha * (Math.exp(xi) - 1);\n  }\n});\n\nexport const seluConfig: KernelConfig = {\n  kernelName: Selu,\n  backendName: 'cpu',\n  kernelFunc: selu,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAgBC,IAAI,QAAO,uBAAuB;AAEtE,SAAQC,eAAe,QAAO,sBAAsB;AAEpD,MAAMC,UAAU,GAAGH,YAAY,CAACI,eAAe;AAC/C,MAAMC,KAAK,GAAGL,YAAY,CAACM,UAAU;AAErC,OAAO,MAAMC,IAAI,GAAGL,eAAe,CAACD,IAAI,EAAGO,EAAE,IAAI;EAC/C,IAAIA,EAAE,IAAI,CAAC,EAAE;IACX,OAAOH,KAAK,GAAGG,EAAE;GAClB,MAAM;IACL,OAAOL,UAAU,IAAIM,IAAI,CAACC,GAAG,CAACF,EAAE,CAAC,GAAG,CAAC,CAAC;;AAE1C,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAiB;EACtCC,UAAU,EAAEX,IAAI;EAChBY,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEP;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}