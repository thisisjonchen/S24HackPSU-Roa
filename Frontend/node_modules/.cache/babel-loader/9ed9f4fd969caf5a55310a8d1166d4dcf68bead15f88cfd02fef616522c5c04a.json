{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport const maximumGradConfig = {\n  kernelName: Maximum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(greaterEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(less(a, b), 'float32'));\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Maximum","cast","greaterEqual","less","mul","maximumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","derA","derB"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Maximum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Maximum} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {cast} from '../ops/cast';\nimport {greaterEqual} from '../ops/greater_equal';\nimport {less} from '../ops/less';\nimport {mul} from '../ops/mul';\nimport {Tensor} from '../tensor';\n\nexport const maximumGradConfig: GradConfig = {\n  kernelName: Maximum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [a, b] = saved;\n    const derA = () => mul(dy, cast(greaterEqual(a, b), 'float32'));\n    const derB = () => mul(dy, cast(less(a, b), 'float32'));\n    return {a: derA, b: derB};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAO,iBAAiB;AAEvC,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,YAAY,QAAO,sBAAsB;AACjD,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,MAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEN,OAAO;EACnBO,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,KAAI;IACxC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGF,KAAK;IACpB,MAAMG,IAAI,GAAGA,CAAA,KAAMT,GAAG,CAACK,EAAE,EAAER,IAAI,CAACC,YAAY,CAACS,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAC/D,MAAME,IAAI,GAAGA,CAAA,KAAMV,GAAG,CAACK,EAAE,EAAER,IAAI,CAACE,IAAI,CAACQ,CAAC,EAAEC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IACvD,OAAO;MAACD,CAAC,EAAEE,IAAI;MAAED,CAAC,EAAEE;IAAI,CAAC;EAC3B;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}