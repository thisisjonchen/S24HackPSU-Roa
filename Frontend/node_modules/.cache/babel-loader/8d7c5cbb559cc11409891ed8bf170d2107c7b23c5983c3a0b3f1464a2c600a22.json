{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nexport function assertParamsConsistent(shapes, axis) {\n  const rank = shapes[0].length;\n  shapes.forEach((shape, i) => {\n    util.assert(shape.length === rank, () => `Error in concat${rank}D: rank of tensors[${i}] must be the same ` + `as the rank of the rest (${rank})`);\n  });\n  util.assert(axis >= 0 && axis < rank, () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n  const firstShape = shapes[0];\n  shapes.forEach((shape, i) => {\n    for (let r = 0; r < rank; r++) {\n      util.assert(r === axis || shape[r] === firstShape[r], () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` + `does not match the shape of the rest (${firstShape}) ` + `along the non-concatenated axis ${i}.`);\n    }\n  });\n}\nexport function computeOutShape(shapes, axis) {\n  const outputShape = shapes[0].slice();\n  for (let i = 1; i < shapes.length; i++) {\n    outputShape[axis] += shapes[i][axis];\n  }\n  return outputShape;\n}","map":{"version":3,"names":["util","assertParamsConsistent","shapes","axis","rank","length","forEach","shape","i","assert","firstShape","r","computeOutShape","outputShape","slice"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/ops/concat_util.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\nexport function assertParamsConsistent(shapes: number[][], axis: number) {\n  const rank = shapes[0].length;\n  shapes.forEach((shape, i) => {\n    util.assert(\n        shape.length === rank,\n        () =>\n            `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n  });\n\n  util.assert(\n      axis >= 0 && axis < rank,\n      () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n\n  const firstShape = shapes[0];\n  shapes.forEach((shape, i) => {\n    for (let r = 0; r < rank; r++) {\n      util.assert(\n          (r === axis) || (shape[r] === firstShape[r]),\n          () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n              `does not match the shape of the rest (${firstShape}) ` +\n              `along the non-concatenated axis ${i}.`);\n    }\n  });\n}\n\nexport function computeOutShape(shapes: number[][], axis: number): number[] {\n  const outputShape = shapes[0].slice();\n  for (let i = 1; i < shapes.length; i++) {\n    outputShape[axis] += shapes[i][axis];\n  }\n  return outputShape;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,IAAI,MAAM,SAAS;AAE/B,OAAM,SAAUC,sBAAsBA,CAACC,MAAkB,EAAEC,IAAY;EACrE,MAAMC,IAAI,GAAGF,MAAM,CAAC,CAAC,CAAC,CAACG,MAAM;EAC7BH,MAAM,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAI;IAC1BR,IAAI,CAACS,MAAM,CACPF,KAAK,CAACF,MAAM,KAAKD,IAAI,EACrB,MACI,kBAAkBA,IAAI,sBAAsBI,CAAC,qBAAqB,GAClE,4BAA4BJ,IAAI,GAAG,CAAC;EAC9C,CAAC,CAAC;EAEFJ,IAAI,CAACS,MAAM,CACPN,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGC,IAAI,EACxB,MAAM,kBAAkBA,IAAI,iCAAiCA,IAAI,GAAG,CAAC,GAAG,CAAC;EAE7E,MAAMM,UAAU,GAAGR,MAAM,CAAC,CAAC,CAAC;EAC5BA,MAAM,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAI;IAC1B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,IAAI,EAAEO,CAAC,EAAE,EAAE;MAC7BX,IAAI,CAACS,MAAM,CACNE,CAAC,KAAKR,IAAI,IAAMI,KAAK,CAACI,CAAC,CAAC,KAAKD,UAAU,CAACC,CAAC,CAAE,EAC5C,MAAM,kBAAkBP,IAAI,uBAAuBI,CAAC,MAAMD,KAAK,IAAI,GAC/D,yCAAyCG,UAAU,IAAI,GACvD,mCAAmCF,CAAC,GAAG,CAAC;;EAEpD,CAAC,CAAC;AACJ;AAEA,OAAM,SAAUI,eAAeA,CAACV,MAAkB,EAAEC,IAAY;EAC9D,MAAMU,WAAW,GAAGX,MAAM,CAAC,CAAC,CAAC,CAACY,KAAK,EAAE;EACrC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACG,MAAM,EAAEG,CAAC,EAAE,EAAE;IACtCK,WAAW,CAACV,IAAI,CAAC,IAAID,MAAM,CAACM,CAAC,CAAC,CAACL,IAAI,CAAC;;EAEtC,OAAOU,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}