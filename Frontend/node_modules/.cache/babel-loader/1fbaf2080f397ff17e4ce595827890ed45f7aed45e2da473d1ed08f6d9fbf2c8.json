{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport const batchMatMulGradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved, attrs) => {\n    const [a, b] = saved;\n    const {\n      transposeA,\n      transposeB\n    } = attrs;\n    if (!transposeA && !transposeB) {\n      return {\n        a: () => matMul(dy, b, false, true),\n        b: () => matMul(a, dy, true, false)\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: () => matMul(dy, b, false, false),\n        b: () => matMul(dy, a, true, false)\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: () => matMul(b, dy, false, true),\n        b: () => matMul(a, dy, false, false)\n      };\n    } else {\n      return {\n        a: () => matMul(b, dy, true, true),\n        b: () => matMul(dy, a, true, true)\n      };\n    }\n  }\n};","map":{"version":3,"names":["BatchMatMul","matMul","batchMatMulGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","a","b","transposeA","transposeB"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/BatchMatMul_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {matMul} from '../ops/mat_mul';\nimport {Tensor} from '../tensor';\n\nexport const batchMatMulGradConfig: GradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [a, b] = saved;\n\n    const {transposeA, transposeB} = attrs as unknown as BatchMatMulAttrs;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: () => matMul(dy, b, false, true),\n        b: () => matMul(a, dy, true, false)\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: () => matMul(dy, b, false, false),\n        b: () => matMul(dy, a, true, false)\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: () => matMul(b, dy, false, true),\n        b: () => matMul(a, dy, false, false)\n      };\n    } else {\n      return {\n        a: () => matMul(b, dy, true, true),\n        b: () => matMul(dy, a, true, true)\n      };\n    }\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,WAAW,QAAyB,iBAAiB;AAE7D,SAAQC,MAAM,QAAO,gBAAgB;AAGrC,OAAO,MAAMC,qBAAqB,GAAe;EAC/CC,UAAU,EAAEH,WAAW;EACvBI,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EACxBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC7D,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK;IAEpB,MAAM;MAACI,UAAU;MAAEC;IAAU,CAAC,GAAGJ,KAAoC;IAErE,IAAI,CAACG,UAAU,IAAI,CAACC,UAAU,EAAE;MAC9B,OAAO;QACLH,CAAC,EAAEA,CAAA,KAAMR,MAAM,CAACK,EAAE,EAAEI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;QACnCA,CAAC,EAAEA,CAAA,KAAMT,MAAM,CAACQ,CAAC,EAAEH,EAAE,EAAE,IAAI,EAAE,KAAK;OACnC;KACF,MAAM,IAAI,CAACK,UAAU,IAAIC,UAAU,EAAE;MACpC,OAAO;QACLH,CAAC,EAAEA,CAAA,KAAMR,MAAM,CAACK,EAAE,EAAEI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QACpCA,CAAC,EAAEA,CAAA,KAAMT,MAAM,CAACK,EAAE,EAAEG,CAAC,EAAE,IAAI,EAAE,KAAK;OACnC;KACF,MAAM,IAAIE,UAAU,IAAI,CAACC,UAAU,EAAE;MACpC,OAAO;QACLH,CAAC,EAAEA,CAAA,KAAMR,MAAM,CAACS,CAAC,EAAEJ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC;QACnCI,CAAC,EAAEA,CAAA,KAAMT,MAAM,CAACQ,CAAC,EAAEH,EAAE,EAAE,KAAK,EAAE,KAAK;OACpC;KACF,MAAM;MACL,OAAO;QACLG,CAAC,EAAEA,CAAA,KAAMR,MAAM,CAACS,CAAC,EAAEJ,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;QAClCI,CAAC,EAAEA,CAAA,KAAMT,MAAM,CAACK,EAAE,EAAEG,CAAC,EAAE,IAAI,EAAE,IAAI;OAClC;;EAEL;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}