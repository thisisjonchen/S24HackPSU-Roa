{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Complex } from '@tensorflow/tfjs-core';\nexport function complex(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    real,\n    imag\n  } = inputs;\n  const realVals = backend.data.get(real.dataId).values;\n  const imagVals = backend.data.get(imag.dataId).values;\n  const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n  const complex = backend.data.get(complexInfo.dataId);\n  // The complex tensor owns the underlying real and imag tensorInfos, only the\n  // complex tensor tracks refCount, when complexData is disposed the\n  // underlying tensorData will be disposed.\n  complex.complexTensorInfos = {\n    real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n    imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n  };\n  return complexInfo;\n}\nexport const complexConfig = {\n  kernelName: Complex,\n  backendName: 'cpu',\n  kernelFunc: complex\n};","map":{"version":3,"names":["Complex","complex","args","inputs","backend","real","imag","realVals","data","get","dataId","values","imagVals","complexInfo","makeTensorInfo","shape","complexTensorInfos","complexConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Complex.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Complex, ComplexInputs, KernelConfig, KernelFunc, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nexport function complex(args: {inputs: ComplexInputs, backend: MathBackendCPU}):\n    TensorInfo {\n  const {inputs, backend} = args;\n  const {real, imag} = inputs;\n\n  const realVals = backend.data.get(real.dataId).values as TypedArray;\n  const imagVals = backend.data.get(imag.dataId).values as TypedArray;\n\n  const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n\n  const complex = backend.data.get(complexInfo.dataId);\n\n  // The complex tensor owns the underlying real and imag tensorInfos, only the\n  // complex tensor tracks refCount, when complexData is disposed the\n  // underlying tensorData will be disposed.\n  complex.complexTensorInfos = {\n    real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n    imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n  };\n\n  return complexInfo;\n}\n\nexport const complexConfig: KernelConfig = {\n  kernelName: Complex,\n  backendName: 'cpu',\n  kernelFunc: complex as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAwE,uBAAuB;AAI9G,OAAM,SAAUC,OAAOA,CAACC,IAAsD;EAE5E,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGF,IAAI;EAC9B,MAAM;IAACG,IAAI;IAAEC;EAAI,CAAC,GAAGH,MAAM;EAE3B,MAAMI,QAAQ,GAAGH,OAAO,CAACI,IAAI,CAACC,GAAG,CAACJ,IAAI,CAACK,MAAM,CAAC,CAACC,MAAoB;EACnE,MAAMC,QAAQ,GAAGR,OAAO,CAACI,IAAI,CAACC,GAAG,CAACH,IAAI,CAACI,MAAM,CAAC,CAACC,MAAoB;EAEnE,MAAME,WAAW,GAAGT,OAAO,CAACU,cAAc,CAACT,IAAI,CAACU,KAAK,EAAE,WAAW,CAAC;EAEnE,MAAMd,OAAO,GAAGG,OAAO,CAACI,IAAI,CAACC,GAAG,CAACI,WAAW,CAACH,MAAM,CAAC;EAEpD;EACA;EACA;EACAT,OAAO,CAACe,kBAAkB,GAAG;IAC3BX,IAAI,EAAED,OAAO,CAACU,cAAc,CAACT,IAAI,CAACU,KAAK,EAAE,SAAS,EAAER,QAAQ,CAAC;IAC7DD,IAAI,EAAEF,OAAO,CAACU,cAAc,CAACR,IAAI,CAACS,KAAK,EAAE,SAAS,EAAEH,QAAQ;GAC7D;EAED,OAAOC,WAAW;AACpB;AAEA,OAAO,MAAMI,aAAa,GAAiB;EACzCC,UAAU,EAAElB,OAAO;EACnBmB,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEnB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}