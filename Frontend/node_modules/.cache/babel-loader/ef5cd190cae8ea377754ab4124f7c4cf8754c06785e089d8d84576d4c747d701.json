{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Elu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nexport const elu = unaryKernelFunc(Elu, xi => xi >= 0 ? xi : Math.exp(xi) - 1);\nexport const eluConfig = {\n  kernelName: Elu,\n  backendName: 'cpu',\n  kernelFunc: elu\n};","map":{"version":3,"names":["Elu","unaryKernelFunc","elu","xi","Math","exp","eluConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-cpu/src/kernels/Elu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {unaryKernelFunc} from '../utils/unary_utils';\n\nexport const elu =\n    unaryKernelFunc(Elu, (xi) => xi >= 0 ? xi : (Math.exp(xi) - 1));\n\nexport const eluConfig: KernelConfig = {\n  kernelName: Elu,\n  backendName: 'cpu',\n  kernelFunc: elu,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,GAAG,QAAqB,uBAAuB;AAEvD,SAAQC,eAAe,QAAO,sBAAsB;AAEpD,OAAO,MAAMC,GAAG,GACZD,eAAe,CAACD,GAAG,EAAGG,EAAE,IAAKA,EAAE,IAAI,CAAC,GAAGA,EAAE,GAAIC,IAAI,CAACC,GAAG,CAACF,EAAE,CAAC,GAAG,CAAE,CAAC;AAEnE,OAAO,MAAMG,SAAS,GAAiB;EACrCC,UAAU,EAAEP,GAAG;EACfQ,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAEP;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}