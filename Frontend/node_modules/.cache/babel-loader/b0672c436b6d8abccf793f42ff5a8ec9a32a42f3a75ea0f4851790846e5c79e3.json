{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as axis_util from '../ops/axis_util';\nimport { cast } from '../ops/cast';\nimport { equal } from '../ops/equal';\nimport { mul } from '../ops/mul';\nimport { reshape } from '../ops/reshape';\n/**\n * Gradient helper function for the min and max operations.\n */\nexport function gradForMinAndMax(dy, y, xOrig, origAxes) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes));\n  }\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes));\n  }\n  return {\n    x: () => {\n      const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}","map":{"version":3,"names":["axis_util","cast","equal","mul","reshape","gradForMinAndMax","dy","y","xOrig","origAxes","rank","expandShapeToKeepDim","shape","x","dx","dtype"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/min_max_grad_util.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as axis_util from '../ops/axis_util';\nimport {cast} from '../ops/cast';\nimport {equal} from '../ops/equal';\nimport {mul} from '../ops/mul';\nimport {reshape} from '../ops/reshape';\nimport {Tensor} from '../tensor';\n\n/**\n * Gradient helper function for the min and max operations.\n */\nexport function gradForMinAndMax<T extends Tensor>(\n    dy: T, y: T, xOrig: Tensor, origAxes: number[]) {\n  if (y.rank < xOrig.rank) {\n    y = reshape(y, axis_util.expandShapeToKeepDim(y.shape, origAxes)) as T;\n  }\n  if (dy.rank < xOrig.rank) {\n    dy = reshape(dy, axis_util.expandShapeToKeepDim(dy.shape, origAxes)) as T;\n  }\n  return {\n    x: () => {\n      const dx = mul(dy, cast(equal(xOrig, y), dy.dtype));\n      return dx;\n    }\n  };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,OAAO,KAAKA,SAAS,MAAM,kBAAkB;AAC7C,SAAQC,IAAI,QAAO,aAAa;AAChC,SAAQC,KAAK,QAAO,cAAc;AAClC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,OAAO,QAAO,gBAAgB;AAGtC;;;AAGA,OAAM,SAAUC,gBAAgBA,CAC5BC,EAAK,EAAEC,CAAI,EAAEC,KAAa,EAAEC,QAAkB;EAChD,IAAIF,CAAC,CAACG,IAAI,GAAGF,KAAK,CAACE,IAAI,EAAE;IACvBH,CAAC,GAAGH,OAAO,CAACG,CAAC,EAAEP,SAAS,CAACW,oBAAoB,CAACJ,CAAC,CAACK,KAAK,EAAEH,QAAQ,CAAC,CAAM;;EAExE,IAAIH,EAAE,CAACI,IAAI,GAAGF,KAAK,CAACE,IAAI,EAAE;IACxBJ,EAAE,GAAGF,OAAO,CAACE,EAAE,EAAEN,SAAS,CAACW,oBAAoB,CAACL,EAAE,CAACM,KAAK,EAAEH,QAAQ,CAAC,CAAM;;EAE3E,OAAO;IACLI,CAAC,EAAEA,CAAA,KAAK;MACN,MAAMC,EAAE,GAAGX,GAAG,CAACG,EAAE,EAAEL,IAAI,CAACC,KAAK,CAACM,KAAK,EAAED,CAAC,CAAC,EAAED,EAAE,CAACS,KAAK,CAAC,CAAC;MACnD,OAAOD,EAAE;IACX;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}