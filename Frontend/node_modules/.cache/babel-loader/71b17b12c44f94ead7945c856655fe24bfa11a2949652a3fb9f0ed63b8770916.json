{"ast":null,"code":"/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Keeps track of seed and handles pseudorandomness\n * Instance created in BaseRandomLayer class\n * Utilized for random preprocessing layers\n */\nclass RandomSeed {\n  constructor(seed) {\n    this.seed = seed;\n  }\n  next() {\n    if (this.seed === undefined) {\n      return undefined;\n    }\n    return this.seed++;\n  }\n}\nRandomSeed.className = 'RandomSeed';\nexport { RandomSeed };","map":{"version":3,"names":["RandomSeed","constructor","seed","next","undefined","className"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-layers/src/backend/random_seed.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Keeps track of seed and handles pseudorandomness\n * Instance created in BaseRandomLayer class\n * Utilized for random preprocessing layers\n */\n\nexport class RandomSeed {\n  static className = 'RandomSeed';\n  seed: number | undefined;\n  constructor(seed: number | undefined) { \n    this.seed = seed; \n  }\n  next(): number | undefined { \n    if (this.seed === undefined) {\n      return undefined;\n    }\n    return this.seed++; \n  }\n}\n"],"mappings":"AAAA;;;;;;;;;AAUA;;;;;AAMA,MAAaA,UAAU;EAGrBC,YAAYC,IAAwB;IAClC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EACAC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACD,IAAI,KAAKE,SAAS,EAAE;MAC3B,OAAOA,SAAS;;IAElB,OAAO,IAAI,CAACF,IAAI,EAAE;EACpB;;AAVOF,UAAA,CAAAK,SAAS,GAAG,YAAY;SADpBL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}