{"ast":null,"code":"var _jsxFileName = \"/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebRecorder() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const recordedChunks = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.start();\n      setIsRecording(true);\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.ondataavailable = event => {\n        recordedChunks.current.push(event.data);\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(recordedChunks.current, {\n          type: 'video/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        // Do something with the recorded video, e.g., download or upload\n        console.log('Recorded video URL:', url);\n      };\n      videoRef.current.srcObject = stream;\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(WebRecorder, \"+O6L7bi51f8x9i18TvMuyD/lupE=\");\n_c = WebRecorder;\n;\nexport default WebRecorder;\nvar _c;\n$RefreshReg$(_c, \"WebRecorder\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","WebRecorder","_s","isRecording","setIsRecording","videoRef","mediaRecorderRef","recordedChunks","startRecording","stream","navigator","mediaDevices","getUserMedia","video","mediaRecorder","MediaRecorder","start","current","ondataavailable","event","push","data","onstop","blob","Blob","type","url","URL","createObjectURL","console","log","srcObject","error","stopRecording","state","stop","children","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/recorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\n function WebRecorder() {\n    const [isRecording, setIsRecording] = useState(false);\n    const videoRef = useRef(null);\n    const mediaRecorderRef = useRef(null);\n    const recordedChunks = useRef([]);\n\n    const startRecording = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n            const mediaRecorder = new MediaRecorder(stream);\n\n            mediaRecorder.start();\n            setIsRecording(true);\n\n            mediaRecorderRef.current = mediaRecorder;\n            mediaRecorder.ondataavailable = (event) => {\n                recordedChunks.current.push(event.data);\n            };\n\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(recordedChunks.current, { type: 'video/webm' });\n                const url = URL.createObjectURL(blob);\n                // Do something with the recorded video, e.g., download or upload\n                console.log('Recorded video URL:', url);\n            };\n\n            videoRef.current.srcObject = stream;\n        } catch (error) {\n            console.error('Error accessing webcam:', error);\n        }\n    };\n\n    const stopRecording = () => {\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== 'inactive') {\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n        }\n    };\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay></video>\n            <div>\n                {isRecording ? (\n                    <button onClick={stopRecording}>Stop Recording</button>\n                ) : (\n                    <button onClick={startRecording}>Start Recording</button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WebRecorder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMQ,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMQ,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMS,cAAc,GAAGT,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAE/CK,aAAa,CAACE,KAAK,CAAC,CAAC;MACrBZ,cAAc,CAAC,IAAI,CAAC;MAEpBE,gBAAgB,CAACW,OAAO,GAAGH,aAAa;MACxCA,aAAa,CAACI,eAAe,GAAIC,KAAK,IAAK;QACvCZ,cAAc,CAACU,OAAO,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MAC3C,CAAC;MAEDP,aAAa,CAACQ,MAAM,GAAG,MAAM;QACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACjB,cAAc,CAACU,OAAO,EAAE;UAAEQ,IAAI,EAAE;QAAa,CAAC,CAAC;QACrE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QACrC;QACAM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,GAAG,CAAC;MAC3C,CAAC;MAEDrB,QAAQ,CAACY,OAAO,CAACc,SAAS,GAAGtB,MAAM;IACvC,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI3B,gBAAgB,CAACW,OAAO,IAAIX,gBAAgB,CAACW,OAAO,CAACiB,KAAK,KAAK,UAAU,EAAE;MAC3E5B,gBAAgB,CAACW,OAAO,CAACkB,IAAI,CAAC,CAAC;MAC/B/B,cAAc,CAAC,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAAoC,QAAA,gBACIpC,OAAA;MAAOqC,GAAG,EAAEhC,QAAS;MAACiC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvC1C,OAAA;MAAAoC,QAAA,EACKjC,WAAW,gBACRH,OAAA;QAAQ2C,OAAO,EAAEV,aAAc;QAAAG,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEvD1C,OAAA;QAAQ2C,OAAO,EAAEnC,cAAe;QAAA4B,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAC3D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACxC,EAAA,CAnDSD,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAmDpB;AAED,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}