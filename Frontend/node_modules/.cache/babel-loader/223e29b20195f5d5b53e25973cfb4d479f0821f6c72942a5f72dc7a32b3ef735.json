{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Cumsum } from '../kernel_names';\nimport { getAxesPermutation } from '../ops/axis_util';\nimport { cumsum } from '../ops/cumsum';\nimport { transpose } from '../ops/transpose';\nexport const cumsumGradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      axis,\n      exclusive,\n      reverse\n    } = attrs;\n    return {\n      x: () => {\n        const permutation = getAxesPermutation([axis], x.rank);\n        let out = cumsum(dy, axis, exclusive, !reverse);\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n        return out;\n      }\n    };\n  }\n};","map":{"version":3,"names":["Cumsum","getAxesPermutation","cumsum","transpose","cumsumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","axis","exclusive","reverse","permutation","rank","out"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Cumsum_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cumsum, CumsumAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {getAxesPermutation} from '../ops/axis_util';\nimport {cumsum} from '../ops/cumsum';\nimport {transpose} from '../ops/transpose';\nimport {Tensor} from '../tensor';\n\nexport const cumsumGradConfig: GradConfig = {\n  kernelName: Cumsum,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved;\n    const {axis, exclusive, reverse}: CumsumAttrs =\n        attrs as unknown as CumsumAttrs;\n\n    return {\n      x: () => {\n        const permutation = getAxesPermutation([axis], x.rank);\n\n        let out = cumsum(dy, axis, exclusive, !reverse);\n\n        if (permutation != null) {\n          out = transpose(out, permutation);\n        }\n\n        return out;\n      }\n    };\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,MAAM,QAAoB,iBAAiB;AAEnD,SAAQC,kBAAkB,QAAO,kBAAkB;AACnD,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,SAAS,QAAO,kBAAkB;AAG1C,OAAO,MAAMC,gBAAgB,GAAe;EAC1CC,UAAU,EAAEL,MAAM;EAClBM,YAAY,EAAE,CAAC,GAAG,CAAC;EACnBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,EAAEC,KAAmB,KAAI;IAC7D,MAAM,CAACC,CAAC,CAAC,GAAGF,KAAK;IACjB,MAAM;MAACG,IAAI;MAAEC,SAAS;MAAEC;IAAO,CAAC,GAC5BJ,KAA+B;IAEnC,OAAO;MACLC,CAAC,EAAEA,CAAA,KAAK;QACN,MAAMI,WAAW,GAAGd,kBAAkB,CAAC,CAACW,IAAI,CAAC,EAAED,CAAC,CAACK,IAAI,CAAC;QAEtD,IAAIC,GAAG,GAAGf,MAAM,CAACM,EAAE,EAAEI,IAAI,EAAEC,SAAS,EAAE,CAACC,OAAO,CAAC;QAE/C,IAAIC,WAAW,IAAI,IAAI,EAAE;UACvBE,GAAG,GAAGd,SAAS,CAACc,GAAG,EAAEF,WAAW,CAAC;;QAGnC,OAAOE,GAAG;MACZ;KACD;EACH;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}