{"ast":null,"code":"var _jsxFileName = \"/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/mute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MuteButton() {\n  _s();\n  const [muted, setMuted] = useState(false);\n  useEffect(() => {\n    const muteAudio = () => {\n      if (muted) {\n        document.querySelectorAll('audio, video').forEach(element => {\n          element.muted = true;\n        });\n      } else {\n        document.querySelectorAll('audio, video').forEach(element => {\n          element.muted = false;\n        });\n      }\n    };\n    muteAudio();\n  }, [muted]);\n  const toggleMute = () => {\n    setMuted(!muted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleMute,\n    children: muted ? 'Unmute' : 'Mute'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MuteButton, \"C7fd7eiQFOSOHnyqOCrRCZOfel8=\");\n_c = MuteButton;\nexport default MuteButton;\nvar _c;\n$RefreshReg$(_c, \"MuteButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MuteButton","_s","muted","setMuted","muteAudio","document","querySelectorAll","forEach","element","toggleMute","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonchen/Documents/HackPSU/s24hackpsu/src/components/mute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MuteButton() {\n    const [muted, setMuted] = useState(false);\n\n    useEffect(() => {\n        const muteAudio = () => {\n            if (muted) {\n                document.querySelectorAll('audio, video').forEach((element) => {\n                    element.muted = true;\n                });\n            } else {\n                document.querySelectorAll('audio, video').forEach((element) => {\n                    element.muted = false;\n                });\n            }\n        };\n\n        muteAudio();\n    }, [muted]);\n\n    const toggleMute = () => {\n        setMuted(!muted);\n    };\n\n    return (\n        <button onClick={toggleMute}>\n            {muted ? 'Unmute' : 'Mute'}\n        </button>\n    );\n}\n\nexport default MuteButton"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACZ,MAAMO,SAAS,GAAGA,CAAA,KAAM;MACpB,IAAIF,KAAK,EAAE;QACPG,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,OAAO,CAAEC,OAAO,IAAK;UAC3DA,OAAO,CAACN,KAAK,GAAG,IAAI;QACxB,CAAC,CAAC;MACN,CAAC,MAAM;QACHG,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACC,OAAO,CAAEC,OAAO,IAAK;UAC3DA,OAAO,CAACN,KAAK,GAAG,KAAK;QACzB,CAAC,CAAC;MACN;IACJ,CAAC;IAEDE,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACrBN,QAAQ,CAAC,CAACD,KAAK,CAAC;EACpB,CAAC;EAED,oBACIH,OAAA;IAAQW,OAAO,EAAED,UAAW;IAAAE,QAAA,EACvBT,KAAK,GAAG,QAAQ,GAAG;EAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEjB;AAACd,EAAA,CA5BQD,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AA8BnB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}