{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    numOrSizeSplits,\n    axis\n  } = attrs;\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const xRank = x.shape.length;\n  const begin = new Array(xRank).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT = slice({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        begin,\n        size: sliceSize\n      }\n    });\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\nexport const splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'webgl',\n  kernelFunc: splitV\n};","map":{"version":3,"names":["backend_util","SplitV","util","slice","splitV","args","inputs","backend","attrs","x","numOrSizeSplits","axis","$axis","parseAxisParam","shape","splitSizes","prepareSplitSize","xRank","length","begin","Array","fill","size","map","s","sliceSize","sliceT","splitVConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-backend-webgl/src/kernels/SplitV.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {slice} from './Slice';\n\nexport function splitV(\n    args:\n        {inputs: SplitVInputs, backend: MathBackendWebGL, attrs: SplitVAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n\n  const xRank = x.shape.length;\n  const begin = new Array(xRank).fill(0);\n  const size = x.shape.slice();\n\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT =\n        slice({inputs: {x}, backend, attrs: {begin, size: sliceSize}});\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'webgl',\n  kernelFunc: splitV as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAA4BC,MAAM,EAAyCC,IAAI,QAAO,uBAAuB;AAGjI,SAAQC,KAAK,QAAO,SAAS;AAE7B,OAAM,SAAUC,MAAMA,CAClBC,IACyE;EAE3E,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAC,CAAC,GAAGH,MAAM;EAClB,MAAM;IAACI,eAAe;IAAEC;EAAI,CAAC,GAAGH,KAAK;EAErC,MAAMI,KAAK,GAAGV,IAAI,CAACW,cAAc,CAACF,IAAI,EAAEF,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;EACnD,MAAMC,UAAU,GAAGf,YAAY,CAACgB,gBAAgB,CAACP,CAAC,EAAEC,eAAe,EAAEE,KAAK,CAAC;EAE3E,MAAMK,KAAK,GAAGR,CAAC,CAACK,KAAK,CAACI,MAAM;EAC5B,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EACtC,MAAMC,IAAI,GAAGb,CAAC,CAACK,KAAK,CAACX,KAAK,EAAE;EAE5B,OAAOY,UAAU,CAACQ,GAAG,CAACC,CAAC,IAAG;IACxB,MAAMC,SAAS,GAAG,CAAC,GAAGH,IAAI,CAAC;IAC3BG,SAAS,CAACb,KAAK,CAAC,GAAGY,CAAC;IACpB,MAAME,MAAM,GACRvB,KAAK,CAAC;MAACG,MAAM,EAAE;QAACG;MAAC,CAAC;MAAEF,OAAO;MAAEC,KAAK,EAAE;QAACW,KAAK;QAAEG,IAAI,EAAEG;MAAS;IAAC,CAAC,CAAC;IAClEN,KAAK,CAACP,KAAK,CAAC,IAAIY,CAAC;IACjB,OAAOE,MAAM;EACf,CAAC,CAAC;AACJ;AAEA,OAAO,MAAMC,YAAY,GAAiB;EACxCC,UAAU,EAAE3B,MAAM;EAClB4B,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAE1B;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}