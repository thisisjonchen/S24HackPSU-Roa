{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sigmoid } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { scalar } from '../ops/scalar';\nimport { sub } from '../ops/sub';\nexport const sigmoidGradConfig = {\n  kernelName: Sigmoid,\n  outputsToSave: [true],\n  gradFunc: (dy, saved) => {\n    const [y] = saved;\n    return {\n      x: () => mul(dy, mul(y, sub(scalar(1), y)))\n    };\n  }\n};","map":{"version":3,"names":["Sigmoid","mul","scalar","sub","sigmoidGradConfig","kernelName","outputsToSave","gradFunc","dy","saved","y","x"],"sources":["/Users/jonchen/Documents/HackPSU/tfjs-core/src/gradients/Sigmoid_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Sigmoid} from '../kernel_names';\nimport {GradConfig} from '../kernel_registry';\nimport {mul} from '../ops/mul';\nimport {scalar} from '../ops/scalar';\nimport {sub} from '../ops/sub';\nimport {Tensor} from '../tensor';\n\nexport const sigmoidGradConfig: GradConfig = {\n  kernelName: Sigmoid,\n  outputsToSave: [true],\n  gradFunc: (dy: Tensor, saved: Tensor[]) => {\n    const [y] = saved;\n\n    return {x: () => mul(dy, mul(y, sub(scalar(1), y)))};\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAAO,iBAAiB;AAEvC,SAAQC,GAAG,QAAO,YAAY;AAC9B,SAAQC,MAAM,QAAO,eAAe;AACpC,SAAQC,GAAG,QAAO,YAAY;AAG9B,OAAO,MAAMC,iBAAiB,GAAe;EAC3CC,UAAU,EAAEL,OAAO;EACnBM,aAAa,EAAE,CAAC,IAAI,CAAC;EACrBC,QAAQ,EAAEA,CAACC,EAAU,EAAEC,KAAe,KAAI;IACxC,MAAM,CAACC,CAAC,CAAC,GAAGD,KAAK;IAEjB,OAAO;MAACE,CAAC,EAAEA,CAAA,KAAMV,GAAG,CAACO,EAAE,EAAEP,GAAG,CAACS,CAAC,EAAEP,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,EAAEQ,CAAC,CAAC,CAAC;IAAC,CAAC;EACtD;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}